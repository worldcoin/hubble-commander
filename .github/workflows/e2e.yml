name: E2E Test
on:
  push:
    branches:
      - master

env:
  HUBBLE_ETHEREUM_RPC_URL: ws://localhost:8546
  HUBBLE_ETHEREUM_CHAIN_ID: 1337
  HUBBLE_ETHEREUM_PRIVATE_KEY: ee79b5f6e221356af78cf4c36f4f7885a11b67dfcc81c34d80249947330c0f82

jobs:
  e2e-tests:
    name: Run E2E tests
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run E2E tests
        run: |
          make setup-geth > /dev/null &
          make test-e2e-in-process
  e2e-benchmarks-1:
    name: Run E2E benchmarks (Transfers and C2Ts)
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run benchmarks
        run: |
          make setup-geth > /dev/null &
          make bench-e2e-ci-part-1
  e2e-benchmarks-2:
    name: Run E2E benchmarks (Mixed transactions)
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run benchmarks
        run: |
          make setup-geth > /dev/null &
          make bench-e2e-ci-part-2
  e2e-benchmarks-3:
    name: Run E2E benchmarks (Syncing)
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run benchmarks
        run: |
          make setup-geth > /dev/null &
          make bench-e2e-ci-part-3
  e2e-benchmarks-4:
    name: Run E2E benchmarks (Public keys registration)
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run benchmarks
        run: |
          make setup-geth > /dev/null &
          make bench-e2e-ci-part-4

  build-image:
    name: Build Docker image
    needs: 
      - e2e-tests
      - e2e-benchmarks-1
      - e2e-benchmarks-2
      - e2e-benchmarks-3
      - e2e-benchmarks-4
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/worldcoin/hubble-commander:latest

  deploy:
    name: Deploy to AWS
    needs: build-image
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy to AWS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_CRYPTO_HOST }}
          username: ec2-user
          key: ${{ secrets.AWS_CRYPTO_SSH_KEY }}
          script_stop: true
          script: |
            cd deployment/
            docker-compose pull
            docker-compose up -d commander
            docker images -f "before=ghcr.io/worldcoin/hubble-commander:latest" -f "dangling=true" -q ghcr.io/worldcoin/hubble-commander | xargs docker image rm || true
