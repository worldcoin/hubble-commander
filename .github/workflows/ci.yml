name: CI
on: [ push ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.43.0
          args: --timeout 2m --build-tags hardhat,e2e

  build-test:
    name: Build and test
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install Go dependencies
        run: make install
      - name: Build
        run: make build
      - name: Test
        run: make test

  test-on-hardhat:
    name: Run tests using hardhat
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Go dependencies
        run: make install
      - name: Install JavaScript dependancies
        run: npm ci
        working-directory: hubble-contracts
      - name: Compile contracts and generate ts types
        run: npm run generate
        working-directory: hubble-contracts
      - name: Run node in the background
        run: npm run hardhat:node &
        working-directory: hubble-contracts
      - name: Deploy gas estimator contracts
        run: npm run keyless:deploy
        working-directory: hubble-contracts
      - name: Test
        run: make test-hardhat

  generate:
    name: Generate
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Install Go dependencies
        run: make install
      - name: Install abigen
        run: |
          sudo add-apt-repository -y ppa:ethereum/ethereum
          sudo apt-get update
          sudo apt-get install ethereum
      - name: Move existing files
        run: |
          find contracts -type f ! -name '*.go' -exec rm {} \;
          find contracts -type f -name 'events.go' -exec rm {} \;
          mv contracts tmp-contracts
      - name: Generate bindings
        run: make generate
      - name: Check diff
        run: diff -r contracts tmp-contracts
  deploy-stage-us-east-1-manual:
    name: Manual deploy to stage us-east-1
    runs-on: ubuntu-latest
    needs: [ test, build_and_push ]
    environment: stage-manual
    env:
      CLUSTER_NAME: crypto
      AWS_REGION: us-east-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_NEW }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_NEW }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::267301337261:role/cross-account/deploy
          role-duration-seconds: 900
      - run: aws eks --region us-east-1 update-kubeconfig --name $CLUSTER_NAME
      - name: Create pull secret for ghcr.io
        run: >-
          kubectl create secret docker-registry ghcr-secret
          --docker-server=ghcr.io
          --docker-username="${{ github.repository_owner }}"
          --docker-password="${{ secrets.GITHUB_TOKEN }}"
          -o yaml --dry-run=client | kubectl apply -n signup-sequencer -f -
      - name: Helm install
        run: >-
          helm upgrade --install hubble-commander -n hubble-commander ./deploy
          --atomic
          --timeout 60s
          --set image.tag="${{ github.sha }}"
          --set image.pullSecret=ghcr-secret
          --set environment=stage
