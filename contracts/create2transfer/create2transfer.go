// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package create2transfer

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// TypesAuthCommon is an auto generated low-level Go binding around an user-defined struct.
type TypesAuthCommon struct {
	Signature   [2]*big.Int
	StateRoot   [32]byte
	AccountRoot [32]byte
	Domain      [32]byte
	Txs         []byte
}

// TypesSignatureProofWithReceiver is an auto generated low-level Go binding around an user-defined struct.
type TypesSignatureProofWithReceiver struct {
	States                  []TypesUserState
	StateWitnesses          [][][32]byte
	PubkeysSender           [][4]*big.Int
	PubkeyWitnessesSender   [][][32]byte
	PubkeyHashesReceiver    [][32]byte
	PubkeyWitnessesReceiver [][][32]byte
}

// TypesStateMerkleProof is an auto generated low-level Go binding around an user-defined struct.
type TypesStateMerkleProof struct {
	State   TypesUserState
	Witness [][32]byte
}

// TypesUserState is an auto generated low-level Go binding around an user-defined struct.
type TypesUserState struct {
	PubkeyID *big.Int
	TokenID  *big.Int
	Balance  *big.Int
	Nonce    *big.Int
}

// Create2TransferABI is the input ABI used to generate the binding from.
const Create2TransferABI = "[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"accountRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"internalType\":\"structTypes.AuthCommon\",\"name\":\"common\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState[]\",\"name\":\"states\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"stateWitnesses\",\"type\":\"bytes32[][]\"},{\"internalType\":\"uint256[4][]\",\"name\":\"pubkeysSender\",\"type\":\"uint256[4][]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"pubkeyWitnessesSender\",\"type\":\"bytes32[][]\"},{\"internalType\":\"bytes32[]\",\"name\":\"pubkeyHashesReceiver\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"pubkeyWitnessesReceiver\",\"type\":\"bytes32[][]\"}],\"internalType\":\"structTypes.SignatureProofWithReceiver\",\"name\":\"proof\",\"type\":\"tuple\"}],\"name\":\"checkSignature\",\"outputs\":[{\"internalType\":\"enumTypes.Result\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxTxSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeReceiver\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"witness\",\"type\":\"bytes32[]\"}],\"internalType\":\"structTypes.StateMerkleProof[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"processCreate2TransferCommit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// Create2TransferBin is the compiled bytecode used for deploying new contracts.
var Create2TransferBin = "0x608060405234801561001057600080fd5b5061317d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063336920361461003b578063ff81749514610065575b600080fd5b61004e610049366004612ae0565b610085565b60405161005c929190612d38565b60405180910390f35b610078610073366004612bad565b6101ba565b60405161005c9190612d4c565b600080610091846101cf565b156100a1575085905060086101b0565b60006100ac856101e7565b9050868111156100c35787600992509250506101b0565b600080856000815181106100d357fe5b6020026020010151600001516020015190506100ed6125c0565b60005b8481101561017f5761010289826101fb565b91506101408c83858b856002028151811061011957fe5b60200260200101518c866002026001018151811061013357fe5b602002602001015161027e565b909c509550600086600a81111561015357fe5b14610165578b965050505050506101b0565b60808201516101759085906102d2565b93506001016100f0565b506101a38b8a84868b896002028151811061019657fe5b6020026020010151610300565b909b508b96509450505050505b9550959350505050565b60006101c683836103ae565b90505b92915050565b600060108251816101dc57fe5b06151590505b919050565b600060108251816101f457fe5b0492915050565b6102036125c0565b50600460108281028401918201516008830151600c80850151600e86015195909401516040805160a08101825263ffffffff958616815293851660208501529490931693820193909352600f84841c8116600a90810a610fff9687160260608401529383901c1690920a921691909102608082015292915050565b60008061029b8787600001518789606001518a608001518961073f565b9092509050600081600a8111156102ae57fe5b146102b8576101b0565b6102c4828787866107f2565b976000975095505050505050565b6000828201838110156101c65760405162461bcd60e51b81526004016102f790612de3565b60405180910390fd5b600080610326876103148560000151610886565b805190602001208886602001516108c5565b6103425760405162461bcd60e51b81526004016102f7906130bd565b61034a6125ef565b600061035b878787600001516108dd565b9092509050600081600a81111561036e57fe5b14610380576000935091506101b09050565b61039e61038c83610886565b8051906020012089876020015161094f565b9960009950975050505050505050565b6000806103be84608001516101e7565b905060608167ffffffffffffffff811180156103d957600080fd5b5060405190808252806020026020018201604052801561041357816020015b610400612617565b8152602001906001900390816103f85790505b50905060608267ffffffffffffffff8111801561042f57600080fd5b50604051908082528060200260200182016040528015610459578160200160208202803683370190505b50905060005b838110156106f057600019818503016104766125c0565b608089015161048590836101fb565b90506104d889602001516104af8a6000015185815181106104a257fe5b6020026020010151610886565b8051906020012083600001518b6020015186815181106104cb57fe5b60200260200101516108c5565b6104f45760405162461bcd60e51b81526004016102f790612d9f565b60008860000151838151811061050657fe5b6020026020010151606001511161052f5760405162461bcd60e51b81526004016102f790612f37565b6105a189604001518960400151848151811061054757fe5b602002602001015160405160200161055f9190612c7a565b604051602081830303815290604052805190602001208a60000151858151811061058557fe5b6020026020010151600001518b6060015186815181106104cb57fe5b6105bd5760405162461bcd60e51b81526004016102f790612e1a565b6105f28960400151896080015184815181106105d557fe5b602002602001015183604001518b60a0015186815181106104cb57fe5b61060e5760405162461bcd60e51b81526004016102f790612f6e565b600060018960000151848151811061062257fe5b6020026020010151606001510390506000826000015166038d7ea4c6800001905060005b85811015610679578187828151811061065b57fe5b6020026020010151141561067157600019909201915b600101610646565b508086868151811061068757fe5b60200260200101818152505060606106b784848d6080015188815181106106aa57fe5b60200260200101516109fc565b90506106c78c6060015182610a3e565b8886815181106106d357fe5b60200260200101819052505050505050808060010191505061045f565b506000806107078860000151886040015186610afd565b925090508161071e57600a955050505050506101c9565b80610731576005955050505050506101c9565b506000979650505050505050565b600080610765886107538560000151610886565b805190602001208986602001516108c5565b6107815760405162461bcd60e51b81526004016102f790612fb6565b6107896125ef565b600061079b8888888860000151610f2d565b9092509050600081600a8111156107ae57fe5b146107c0576000935091506107e79050565b6107de6107cc83610886565b805190602001208a876020015161094f565b93506000925050505b965096945050505050565b600061082f85600060405160200161080a9190612d5a565b60405160208183030381529060405280519060200120866020015185602001516108c5565b61084b5760405162461bcd60e51b81526004016102f790612e64565b60606108608560400151858760600151610ff5565b905061087c81805190602001208660200151856020015161094f565b9695505050505050565b606081600001518260200151836040015184606001516040516020016108af9493929190612d0f565b6040516020818303038152906040529050919050565b6000846108d385858561094f565b1495945050505050565b6108e56125ef565b6000848360200151146108fd57508190506004610947565b604051806080016040528084600001518152602001846020015181526020016109338686604001516102d290919063ffffffff16565b815260608501516020909101529150600090505b935093915050565b600083815b83518110156109f157600185821c166109aa578184828151811061097457fe5b602002602001015160405160200161098d929190612d2a565b6040516020818303038152906040528051906020012091506109e9565b8381815181106109b657fe5b6020026020010151826040516020016109d0929190612d2a565b6040516020818303038152906040528051906020012091505b600101610954565b5090505b9392505050565b606060038460000151838587606001518860800151604051602001610a2696959493929190612ce7565b60405160208183030381529060405290509392505050565b610a46612617565b610a4e612617565b610a588484611035565b9050610a62612617565b610a738260005b60200201516110f0565b9050610a7d612617565b610a88836001610a69565b9050610a92612635565b825181526020808401518282015282516040808401919091529083015160608301526000908460808460066107d05a03fa9050808015610ad157610ad3565bfe5b5080610af15760405162461bcd60e51b81526004016102f790612d68565b50919695505050505050565b8151600090819080610b215760405162461bcd60e51b81526004016102f790612ff7565b83518114610b415760405162461bcd60e51b81526004016102f790612ee2565b6006600182010260608167ffffffffffffffff81118015610b6157600080fd5b50604051908082528060200260200182016040528015610b8b578160200160208202803683370190505b509050876000602002015181600081518110610ba357fe5b6020908102919091010152876001602002015181600181518110610bc357fe5b6020026020010181815250507f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281600281518110610bfd57fe5b6020026020010181815250507f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81600381518110610c3757fe5b6020026020010181815250507f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81600481518110610c7157fe5b6020026020010181815250507f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81600581518110610cab57fe5b60200260200101818152505060005b83811015610e5b57868181518110610cce57fe5b6020026020010151600060028110610ce257fe5b6020020151828260060260060181518110610cf957fe5b602002602001018181525050868181518110610d1157fe5b6020026020010151600160028110610d2557fe5b6020020151828260060260070181518110610d3c57fe5b602002602001018181525050878181518110610d5457fe5b6020026020010151600160048110610d6857fe5b6020020151828260060260080181518110610d7f57fe5b602002602001018181525050878181518110610d9757fe5b6020026020010151600060048110610dab57fe5b6020020151828260060260090181518110610dc257fe5b602002602001018181525050878181518110610dda57fe5b6020026020010151600360048110610dee57fe5b60200201518282600602600a0181518110610e0557fe5b602002602001018181525050878181518110610e1d57fe5b6020026020010151600260048110610e3157fe5b60200201518282600602600b0181518110610e4857fe5b6020908102919091010152600101610cba565b50610e64612653565b60405163273cfc6560e11b815260009073079d8077c465bd0bf0fc502ad2b846757e41566190634e79f8ca90610ea1906001890190600401613100565b60206040518083038186803b158015610eb957600080fd5b505afa158015610ecd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef19190612ac8565b90506020826020860260208601600885fa955085610f1a57600080965096505050505050610947565b5051151598600198509650505050505050565b610f356125ef565b600084610f4757508190506001610fec565b6000610f5386866102d2565b90508084604001511015610f6e578360029250925050610fec565b86846020015114610f86578360039250925050610fec565b610f8e6125ef565b60405180608001604052808660000151815260200186602001518152602001610fc484886040015161146c90919063ffffffff16565b8152602001610fe1600188606001516102d290919063ffffffff16565b905293506000925050505b94509492505050565b6060610fff6125ef565b60405180608001604052808681526020018581526020018481526020016000815250905061102c81610886565b95945050505050565b61103d612617565b60606110498484611494565b9050600080600080601885016001600160c01b0381511693506030860190506001600160c01b03815116945060008051602061315183398151915285600080516020613151833981519152600160c01b870908604887015160608801516001600160c01b039081169750169450925060008051602061315183398151915290508481600160c01b860908604080518082019091529283526020830152509695505050505050565b6110f8612617565b60008051602061315183398151915282106111255760405162461bcd60e51b81526004016102f790613038565b81600061113182611710565b91505060006000805160206131518339815191528061114c57fe5b8384099050600080516020613151833981519152600482089050600060008051602061315183398151915277b3c4d79d41a91759a9e4c7e359b6b89eaec68e62effffffd85099050600060008051602061315183398151915283830990506111b381611739565b905060008051602061315183398151915282830991506000805160206131518339815191528183099150600080516020613151833981519152828609915060008051602061315183398151915282600080516020613151833981519152037759e26bcea0d48bacd4f263f1acdb5c4f5763473177fffffe08945060008051602061315183398151915285860991506000805160206131518339815191528583099150600080516020613151833981519152600383089150600061127583611710565b909350905080156112b8578461129957826000805160206131518339815191520392505b5050604080518082019091529384526020840152509091506101e29050565b60008051602061315183398151915260018708600080516020613151833981519152039550600080516020613151833981519152806112f357fe5b8687099250600080516020613151833981519152868409925060008051602061315183398151915260038408925061132a83611710565b90935090508015611369578461129957505060408051808201909152938452600080516020613151833981519152036020840152509091506101e29050565b60008051602061315183398151915284850995506000805160206131518339815191528687099550600080516020613151833981519152828709955060008051602061315183398151915282870995506000805160206131518339815191526001870895506000805160206131518339815191528687099250600080516020613151833981519152868409925060008051602061315183398151915260038408925061141483611710565b9093509050806114365760405162461bcd60e51b81526004016102f79061307b565b8461144f57826000805160206131518339815191520392505b505060408051808201909152938452602084015250909392505050565b60008282111561148e5760405162461bcd60e51b81526004016102f790612eab565b50900390565b8051606090816064820167ffffffffffffffff811180156114b457600080fd5b506040519080825280601f01601f1916602001820160405280156114df576020820181803683370190505b506040805160608082526080820190925291925090816020820181803683370190505090506060820160005b84811015611525576020818801810151838301520161150b565b508301600081536001016060815360010160008153600181018790526021016020815350600060028360405161155b9190612cae565b602060405180830381855afa158015611578573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061159b9190612ac8565b90506000604294508484528160208501526001604085015360418401889052602060618501536002846040516115d19190612cae565b602060405180830381855afa1580156115ee573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906116119190612ac8565b9050806020840152808218806020860152506002604085015360418401889052602060618501536002846040516116489190612cae565b602060405180830381855afa158015611665573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906116889190612ac8565b9050806040840152808218806020860152506003604085015360418401889052602060618501536002846040516116bf9190612cae565b602060405180830381855afa1580156116dc573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906116ff9190612ac8565b606084015250909695505050505050565b60008061171c83611744565b915082600080516020613151833981519152838409149050915091565b60006101c982611e79565b60006000805160206131518339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60006000805160206131518339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b600082601f830112612681578081fd5b813561269461268f82613130565b613109565b818152915060208083019084810160005b848110156126ce576126bc888484358a0101612790565b845292820192908201906001016126a5565b505050505092915050565b6000601f83818401126126ea578182fd5b82356126f861268f82613130565b818152925060208084019085810160808085028801830189101561271b57600080fd5b60005b8581101561278357898784011261273457600080fd5b61273d82613109565b80848486018d81111561274f57600080fd5b60005b600481101561276f57823585529388019391880191600101612752565b50918852509585019593505060010161271e565b5050505050505092915050565b600082601f8301126127a0578081fd5b81356127ae61268f82613130565b8181529150602080830190848101818402860182018710156127cf57600080fd5b60005b848110156126ce578135845292820192908201906001016127d2565b600082601f8301126127fe578081fd5b813561280c61268f82613130565b818152915060208083019084810160808085028701830188101561282f57600080fd5b60005b85811015612856576128448984612a83565b85529383019391810191600101612832565b50505050505092915050565b600082601f830112612872578081fd5b61287c6040613109565b905080828460408501111561289057600080fd5b60005b60028110156128b2578135835260209283019290910190600101612893565b50505092915050565b600082601f8301126128cb578081fd5b813567ffffffffffffffff8111156128e1578182fd5b6128f4601f8201601f1916602001613109565b915080825283602082850101111561290b57600080fd5b8060208401602084013760009082016020015292915050565b600060c08284031215612935578081fd5b61293f60c0613109565b9050813567ffffffffffffffff8082111561295957600080fd5b612965858386016127ee565b8352602084013591508082111561297b57600080fd5b61298785838601612671565b602084015260408401359150808211156129a057600080fd5b6129ac858386016126d9565b604084015260608401359150808211156129c557600080fd5b6129d185838601612671565b606084015260808401359150808211156129ea57600080fd5b6129f685838601612790565b608084015260a0840135915080821115612a0f57600080fd5b50612a1c84828501612671565b60a08301525092915050565b600060a08284031215612a39578081fd5b612a436040613109565b9050612a4f8383612a83565b8152608082013567ffffffffffffffff811115612a6b57600080fd5b612a7784828501612790565b60208301525092915050565b600060808284031215612a94578081fd5b612a9e6080613109565b90508135815260208201356020820152604082013560408201526060820135606082015292915050565b600060208284031215612ad9578081fd5b5051919050565b600080600080600060a08688031215612af7578081fd5b85359450602080870135945060408701359350606087013567ffffffffffffffff80821115612b24578384fd5b612b308a838b016128bb565b94506080890135915080821115612b45578384fd5b508701601f81018913612b56578283fd5b8035612b6461268f82613130565b81815283810190838501865b84811015612b9957612b878e888435890101612a28565b84529286019290860190600101612b70565b505080955050505050509295509295909350565b60008060408385031215612bbf578182fd5b823567ffffffffffffffff80821115612bd6578384fd5b9084019060c08287031215612be9578384fd5b612bf360a0613109565b612bfd8784612862565b815260408301356020820152606083013560408201526080830135606082015260a083013582811115612c2e578586fd5b612c3a888286016128bb565b60808301525093506020850135915080821115612c55578283fd5b50612c6285828601612924565b9150509250929050565b600b8110612c7657fe5b9052565b60008183825b6004811015612c9f578151835260209283019290910190600101612c80565b50505060808201905092915050565b60008251815b81811015612cce5760208186018101518583015201612cb4565b81811115612cdc5782828501525b509190910192915050565b958652602086019490945260408501929092526060840152608083015260a082015260c00190565b93845260208401929092526040830152606082015260800190565b918252602082015260400190565b828152604081016109f56020830184612c6c565b602081016101c98284612c6c565b60ff91909116815260200190565b60208082526017908201527f424c533a20626e206164642063616c6c206661696c6564000000000000000000604082015260600190565b60208082526024908201527f41757468656e7469636974793a20737461746520696e636c7573696f6e20736960408201526333b732b960e11b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252602a908201527f41757468656e7469636974793a2066726f6d206163636f756e7420646f6573206040820152696e6f742065786973747360b01b606082015260800190565b60208082526027908201527f437265617465325472616e736665723a2072656365697665722070726f6f66206040820152661a5b9d985b1a5960ca1b606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526035908201527f424c533a206e756d626572206f66207075626c6963206b65797320616e64206d604082015274195cdcd859d95cc81b5d5cdd08189948195c5d585b605a1b606082015260800190565b60208082526018908201527f41757468656e7469636974793a207a65726f206e6f6e63650000000000000000604082015260600190565b60208082526028908201527f41757468656e7469636974793a20746f206163636f756e7420646f6573206e6f604082015267742065786973747360c01b606082015260800190565b60208082526021908201527f5472616e736974696f6e3a2053656e64657220646f6573206e6f7420657869736040820152601d60fa1b606082015260800190565b60208082526021908201527f424c533a206e756d626572206f66207075626c6963206b6579206973207a65726040820152606f60f81b606082015260800190565b60208082526023908201527f6d6170546f506f696e7446543a20696e76616c6964206669656c6420656c656d604082015262195b9d60ea1b606082015260800190565b60208082526022908201527f424c533a20626164206674206d617070696e6720696d706c656d656e7461746960408201526137b760f11b606082015260800190565b60208082526023908201527f5472616e736974696f6e3a20726563656976657220646f6573206e6f742065786040820152621a5cdd60ea1b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561312857600080fd5b604052919050565b600067ffffffffffffffff821115613146578081fd5b506020908102019056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a164736f6c634300060c000a"

// DeployCreate2Transfer deploys a new Ethereum contract, binding an instance of Create2Transfer to it.
func DeployCreate2Transfer(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Create2Transfer, error) {
	parsed, err := abi.JSON(strings.NewReader(Create2TransferABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(Create2TransferBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Create2Transfer{Create2TransferCaller: Create2TransferCaller{contract: contract}, Create2TransferTransactor: Create2TransferTransactor{contract: contract}, Create2TransferFilterer: Create2TransferFilterer{contract: contract}}, nil
}

// Create2Transfer is an auto generated Go binding around an Ethereum contract.
type Create2Transfer struct {
	Create2TransferCaller     // Read-only binding to the contract
	Create2TransferTransactor // Write-only binding to the contract
	Create2TransferFilterer   // Log filterer for contract events
}

// Create2TransferCaller is an auto generated read-only Go binding around an Ethereum contract.
type Create2TransferCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Create2TransferTransactor is an auto generated write-only Go binding around an Ethereum contract.
type Create2TransferTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Create2TransferFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type Create2TransferFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// Create2TransferSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type Create2TransferSession struct {
	Contract     *Create2Transfer  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// Create2TransferCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type Create2TransferCallerSession struct {
	Contract *Create2TransferCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// Create2TransferTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type Create2TransferTransactorSession struct {
	Contract     *Create2TransferTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// Create2TransferRaw is an auto generated low-level Go binding around an Ethereum contract.
type Create2TransferRaw struct {
	Contract *Create2Transfer // Generic contract binding to access the raw methods on
}

// Create2TransferCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type Create2TransferCallerRaw struct {
	Contract *Create2TransferCaller // Generic read-only contract binding to access the raw methods on
}

// Create2TransferTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type Create2TransferTransactorRaw struct {
	Contract *Create2TransferTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCreate2Transfer creates a new instance of Create2Transfer, bound to a specific deployed contract.
func NewCreate2Transfer(address common.Address, backend bind.ContractBackend) (*Create2Transfer, error) {
	contract, err := bindCreate2Transfer(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Create2Transfer{Create2TransferCaller: Create2TransferCaller{contract: contract}, Create2TransferTransactor: Create2TransferTransactor{contract: contract}, Create2TransferFilterer: Create2TransferFilterer{contract: contract}}, nil
}

// NewCreate2TransferCaller creates a new read-only instance of Create2Transfer, bound to a specific deployed contract.
func NewCreate2TransferCaller(address common.Address, caller bind.ContractCaller) (*Create2TransferCaller, error) {
	contract, err := bindCreate2Transfer(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &Create2TransferCaller{contract: contract}, nil
}

// NewCreate2TransferTransactor creates a new write-only instance of Create2Transfer, bound to a specific deployed contract.
func NewCreate2TransferTransactor(address common.Address, transactor bind.ContractTransactor) (*Create2TransferTransactor, error) {
	contract, err := bindCreate2Transfer(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &Create2TransferTransactor{contract: contract}, nil
}

// NewCreate2TransferFilterer creates a new log filterer instance of Create2Transfer, bound to a specific deployed contract.
func NewCreate2TransferFilterer(address common.Address, filterer bind.ContractFilterer) (*Create2TransferFilterer, error) {
	contract, err := bindCreate2Transfer(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &Create2TransferFilterer{contract: contract}, nil
}

// bindCreate2Transfer binds a generic wrapper to an already deployed contract.
func bindCreate2Transfer(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(Create2TransferABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Create2Transfer *Create2TransferRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Create2Transfer.Contract.Create2TransferCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Create2Transfer *Create2TransferRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Create2Transfer.Contract.Create2TransferTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Create2Transfer *Create2TransferRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Create2Transfer.Contract.Create2TransferTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Create2Transfer *Create2TransferCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Create2Transfer.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Create2Transfer *Create2TransferTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Create2Transfer.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Create2Transfer *Create2TransferTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Create2Transfer.Contract.contract.Transact(opts, method, params...)
}

// CheckSignature is a free data retrieval call binding the contract method 0xff817495.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][],bytes32[],bytes32[][]) proof) view returns(uint8)
func (_Create2Transfer *Create2TransferCaller) CheckSignature(opts *bind.CallOpts, common TypesAuthCommon, proof TypesSignatureProofWithReceiver) (uint8, error) {
	var out []interface{}
	err := _Create2Transfer.contract.Call(opts, &out, "checkSignature", common, proof)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CheckSignature is a free data retrieval call binding the contract method 0xff817495.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][],bytes32[],bytes32[][]) proof) view returns(uint8)
func (_Create2Transfer *Create2TransferSession) CheckSignature(common TypesAuthCommon, proof TypesSignatureProofWithReceiver) (uint8, error) {
	return _Create2Transfer.Contract.CheckSignature(&_Create2Transfer.CallOpts, common, proof)
}

// CheckSignature is a free data retrieval call binding the contract method 0xff817495.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][],bytes32[],bytes32[][]) proof) view returns(uint8)
func (_Create2Transfer *Create2TransferCallerSession) CheckSignature(common TypesAuthCommon, proof TypesSignatureProofWithReceiver) (uint8, error) {
	return _Create2Transfer.Contract.CheckSignature(&_Create2Transfer.CallOpts, common, proof)
}

// ProcessCreate2TransferCommit is a free data retrieval call binding the contract method 0x33692036.
//
// Solidity: function processCreate2TransferCommit(bytes32 stateRoot, uint256 maxTxSize, uint256 feeReceiver, bytes txs, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_Create2Transfer *Create2TransferCaller) ProcessCreate2TransferCommit(opts *bind.CallOpts, stateRoot [32]byte, maxTxSize *big.Int, feeReceiver *big.Int, txs []byte, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	var out []interface{}
	err := _Create2Transfer.contract.Call(opts, &out, "processCreate2TransferCommit", stateRoot, maxTxSize, feeReceiver, txs, proofs)

	if err != nil {
		return *new([32]byte), *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	out1 := *abi.ConvertType(out[1], new(uint8)).(*uint8)

	return out0, out1, err

}

// ProcessCreate2TransferCommit is a free data retrieval call binding the contract method 0x33692036.
//
// Solidity: function processCreate2TransferCommit(bytes32 stateRoot, uint256 maxTxSize, uint256 feeReceiver, bytes txs, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_Create2Transfer *Create2TransferSession) ProcessCreate2TransferCommit(stateRoot [32]byte, maxTxSize *big.Int, feeReceiver *big.Int, txs []byte, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	return _Create2Transfer.Contract.ProcessCreate2TransferCommit(&_Create2Transfer.CallOpts, stateRoot, maxTxSize, feeReceiver, txs, proofs)
}

// ProcessCreate2TransferCommit is a free data retrieval call binding the contract method 0x33692036.
//
// Solidity: function processCreate2TransferCommit(bytes32 stateRoot, uint256 maxTxSize, uint256 feeReceiver, bytes txs, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_Create2Transfer *Create2TransferCallerSession) ProcessCreate2TransferCommit(stateRoot [32]byte, maxTxSize *big.Int, feeReceiver *big.Int, txs []byte, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	return _Create2Transfer.Contract.ProcessCreate2TransferCommit(&_Create2Transfer.CallOpts, stateRoot, maxTxSize, feeReceiver, txs, proofs)
}
