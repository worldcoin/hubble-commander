// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package massmigration

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OffchainMassMigration is an auto generated low-level Go binding around an user-defined struct.
type OffchainMassMigration struct {
	TxType    *big.Int
	FromIndex *big.Int
	Amount    *big.Int
	Fee       *big.Int
	SpokeID   *big.Int
	Nonce     *big.Int
}

// TxMassMigration is an auto generated low-level Go binding around an user-defined struct.
type TxMassMigration struct {
	FromIndex *big.Int
	Amount    *big.Int
	Fee       *big.Int
}

// TypesSignatureProof is an auto generated low-level Go binding around an user-defined struct.
type TypesSignatureProof struct {
	States          []TypesUserState
	StateWitnesses  [][][32]byte
	Pubkeys         [][4]*big.Int
	PubkeyWitnesses [][][32]byte
}

// TypesStateMerkleProof is an auto generated low-level Go binding around an user-defined struct.
type TypesStateMerkleProof struct {
	State   TypesUserState
	Witness [][32]byte
}

// TypesUserState is an auto generated low-level Go binding around an user-defined struct.
type TypesUserState struct {
	PubkeyID *big.Int
	TokenID  *big.Int
	Balance  *big.Int
	Nonce    *big.Int
}

// FrontendMassMigrationMetaData contains all meta data concerning the FrontendMassMigration contract.
var FrontendMassMigrationMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState[]\",\"name\":\"states\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"stateWitnesses\",\"type\":\"bytes32[][]\"},{\"internalType\":\"uint256[4][]\",\"name\":\"pubkeys\",\"type\":\"uint256[4][]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"pubkeyWitnesses\",\"type\":\"bytes32[][]\"}],\"internalType\":\"structTypes.SignatureProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"accountRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"name\":\"checkSignature\",\"outputs\":[{\"internalType\":\"enumTypes.Result\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedTxs\",\"type\":\"bytes[]\"}],\"name\":\"compress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"decode\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structOffchain.MassMigration\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"name\":\"decompress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"structTx.MassMigration[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structOffchain.MassMigration\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"name\":\"encode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"witness\",\"type\":\"bytes32[]\"}],\"internalType\":\"structTypes.StateMerkleProof\",\"name\":\"from\",\"type\":\"tuple\"}],\"name\":\"process\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"freshState\",\"type\":\"bytes\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"signBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"},{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"pubkey\",\"type\":\"uint256[4]\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"senderEncoded\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"validateAndApply\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newSender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"newReceiver\",\"type\":\"bytes\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b506143fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806373b3ba351161006657806373b3ba3514610126578063997ee23814610148578063d8b1728e14610168578063e5c5e9a31461017b578063fa320471146101da57600080fd5b806308909a83146100985780635cd3f3a1146100c15780635ef63f4f146100e15780635f7dde2214610104575b600080fd5b6100ab6100a6366004613f54565b6101ed565b6040516100b89190614180565b60405180910390f35b6100d46100cf366004613e37565b61020c565b6040516100b891906140ff565b6100f46100ef366004613e76565b610366565b60405190151581526020016100b8565b610117610112366004613eec565b61050a565b6040516100b893929190614193565b610139610134366004613d86565b610630565b6040516100b893929190614158565b61015b610156366004613c95565b61068b565b6040516100b891906141c8565b6100ab610176366004613e37565b6106cf565b61018e610189366004613e37565b61075b565b6040516100b89190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b6100ab6101e8366004613c26565b6107da565b606061020661020136849003840184613f6b565b610953565b92915050565b6060600061024f84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109c192505050565b90506000816001600160401b0381111561027957634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156102ce57816020015b6102bb60405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816102975790505b50905060005b8281101561035d5761031f8187878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506109d19050565b82828151811061033f57634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061035590614360565b9150506102d4565b50949350505050565b6000806103a887878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5392505050565b90506103b78160400151610ac0565b506103c58160600151610ac0565b50600060405180606001604052808360200151815260200183604001518152602001836060015181525090506000610406828460a001518560800151610b6e565b905060008061046d8960028060200260405190810160405280929190826002602002808284376000920191909152505060408051608081810190925291508b90600490839083908082843760009201919091525061046891508b905087610bd6565b610cb2565b92509050816104bc5760405162461bcd60e51b8152602060048201526016602482015275141c9958dbdb5c1a5b194818d85b1b0819985a5b195960521b60448201526064015b60405180910390fd5b806104f95760405162461bcd60e51b815260206004820152600d60248201526c426164207369676e617475726560981b60448201526064016104b3565b5060019a9950505050505050505050565b60608060008061054f86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5392505050565b9050600061059289898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f7b92505050565b90506000816020015190506105b1818460400151856060015185610fd0565b94509150600084600b8111156105d757634e487b7160e01b600052602160045260246000fd5b14610602576105e5826110a9565b604080516020810190915260008152909650945061062692505050565b6106158260000151828560400151611128565b9450610620826110a9565b95505050505b9450945094915050565b6000606060008061064087610a53565b90506000604051806060016040528083602001518152602001836040015181526020018360600151815250905061067989828989611159565b94509450945050509450945094915050565b6000806040518060a001604052808a81526020018881526020018781526020018681526020018481525090506106c28189866111df565b9998505050505050505050565b6060600061071284848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5392505050565b905060006040518060600160405280836020015181526020018360400151815260200183606001518152509050610752818360a001518460800151610b6e565b95945050505050565b6107946040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6107d383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5392505050565b9392505050565b60606000826001600160401b0381111561080457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561085957816020015b61084660405180606001604052806000815260200160008152602001600081525090565b8152602001906001900390816108225790505b50905060005b81518110156109415760006108d986868481811061088d57634e487b7160e01b600052603260045260246000fd5b905060200281019061089f91906141d6565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5392505050565b905060405180606001604052808260200151815260200182604001518152602001826060015181525083838151811061092257634e487b7160e01b600052603260045260246000fd5b602002602001018190525050808061093990614360565b91505061085f565b5061094b816116d2565b949350505050565b6060816000015182602001518360400151846060015185608001518660a001516040516020016109ab96959493929190958652602086019490945260408501929092526060840152608083015260a082015260c00190565b6040516020818303038152906040529050919050565b60006008825161020691906142cf565b6109f560405180606001604052806000815260200160008152602001600081525090565b506008908102919091016004810151600682015191909201516040805160608101825263ffffffff9094168452610fff808416600c94851c600f908116600a90810a9290920260208801529184169390941c1690920a029082015290565b610a8c6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81806020019051810190610aa09190614018565b60a087015260808601526060850152604084015260208301528152919050565b60008181805b600f811015610b21578215801590610ae65750610ae4600a8461437b565b155b15610b0a57610af6600a846142cf565b9250610b036001836142b7565b9150610b0f565b610b21565b80610b1981614360565b915050610ac6565b50610fff821115610b605760405162461bcd60e51b8152602060048201526009602482015268109859081a5b9c1d5d60ba1b60448201526064016104b3565b61094b82600c83901b6142b7565b82516020808501516040958601518651600160f91b938101939093526001600160e01b031960e094851b811660218501526025840192909252604583015293821b8416606582015291901b90911660698201528151808203604d018152606d90910190915290565b610bde61381a565b6000610bea84846118ec565b90506000610bfe82825b60200201516119a7565b90506000610c0d836001610bf4565b9050610c17613838565b825181526020808401518282015282516040808401919091529083015160608301526000908460808460066107d05a03fa9050808015610c5657610c58565bfe5b5080610ca65760405162461bcd60e51b815260206004820152601760248201527f424c533a20626e206164642063616c6c206661696c656400000000000000000060448201526064016104b3565b50919695505050505050565b600080600060405180610180016040528087600060028110610ce457634e487b7160e01b600052603260045260246000fd5b6020020151815260200187600160028110610d0f57634e487b7160e01b600052603260045260246000fd5b602002015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d815260200185600060028110610dd257634e487b7160e01b600052603260045260246000fd5b6020020151815260200185600160028110610dfd57634e487b7160e01b600052603260045260246000fd5b6020020151815260200186600160048110610e2857634e487b7160e01b600052603260045260246000fd5b6020020151815260200186600060048110610e5357634e487b7160e01b600052603260045260246000fd5b6020020151815260200186600360048110610e7e57634e487b7160e01b600052603260045260246000fd5b6020020151815260200186600260048110610ea957634e487b7160e01b600052603260045260246000fd5b602002015190529050610eba613856565b60405163273cfc6560e11b815260026004820152600090739f19c6456854fda109dfc2b9ad45d9bf147c855790634e79f8ca9060240160206040518083038186803b158015610f0857600080fd5b505afa158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f409190613d6e565b9050600060208361018086600886fa905080610f66576000809550955050505050610f73565b5050511515925060019150505b935093915050565b610fa66040518060800160405280600081526020016000815260200160008152602001600081525090565b81806020019051810190610fba9190613fe3565b6060850152604084015260208301528152919050565b610ffb6040518060800160405280600081526020016000815260200160008152602001600081525090565b60008461100d575081905060016110a0565b60006110198686611d8b565b905080846040015110156110345783600292509250506110a0565b8684602001511461104c5783600392509250506110a0565b604080516080810182528551815260208087015190820152858201516000928201906110789085611d97565b815260200161109560018860600151611d8b90919063ffffffff16565b905293506000925050505b94509492505050565b80516060901580156110bd57506020820151155b80156110cb57506040820151155b80156110d957506060820151155b156110ef576040805160006020820152016109ab565b8151602080840151604080860151606087015191516109ab95949192910193845260208401929092526040830152606082015260800190565b60606000604051806080016040528086815260200185815260200184815260200160008152509050610752816110a9565b6000606060006111798787600001518789602001518a6040015189611da3565b9093509050600081600b8111156111a057634e487b7160e01b600052602160045260246000fd5b146111bb576040805160208101909152600081529150610626565b83515160208701516111cf91908790611128565b9150600090509450945094915050565b6000806111ef85608001516109c1565b90506000816001600160401b0381111561121957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561125257816020015b61123f61381a565b8152602001906001900390816112375790505b5090506000826001600160401b0381111561127d57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156112a6578160200160208202803683370190505b50905060005b8381101561168257600060016112c28387614302565b6112cc9190614302565b905060006112e7828b608001516109d190919063ffffffff16565b90506113628a602001516113258b60000151858151811061131857634e487b7160e01b600052603260045260246000fd5b60200260200101516110a9565b8051906020012083600001518c60200151868151811061135557634e487b7160e01b600052603260045260246000fd5b6020026020010151611e9d565b6113ba5760405162461bcd60e51b8152602060048201526024808201527f41757468656e7469636974793a20737461746520696e636c7573696f6e20736960448201526333b732b960e11b60648201526084016104b3565b6000896000015183815181106113e057634e487b7160e01b600052603260045260246000fd5b602002602001015160600151116114395760405162461bcd60e51b815260206004820152601860248201527f41757468656e7469636974793a207a65726f206e6f6e6365000000000000000060448201526064016104b3565b6114e78a604001518a60400151848151811061146557634e487b7160e01b600052603260045260246000fd5b602002602001015160405160200161147d91906140af565b604051602081830303815290604052805190602001208b6000015185815181106114b757634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518c60600151868151811061135557634e487b7160e01b600052603260045260246000fd5b6115415760405162461bcd60e51b815260206004820152602560248201527f41757468656e7469636974793a206163636f756e7420646f6573206e6f742065604482015264786973747360d81b60648201526084016104b3565b600060018a60000151848151811061156957634e487b7160e01b600052603260045260246000fd5b60200260200101516060015161157f9190614302565b82519091506000906115989066038d7ea4c680006142b7565b905060005b858110156115f457818782815181106115c657634e487b7160e01b600052603260045260246000fd5b602002602001015114156115e257826115de81614349565b9350505b806115ec81614360565b91505061159d565b508086868151811061161657634e487b7160e01b600052603260045260246000fd5b602002602001018181525050600061162f84848d610b6e565b905061163f8d6060015182610bd6565b88868151811061165f57634e487b7160e01b600052603260045260246000fd5b60200260200101819052505050505050808061167a90614360565b9150506112ac565b506000806116998960000151896040015186611eb5565b92509050816116b057600a955050505050506107d3565b806116c3576005955050505050506107d3565b50600098975050505050505050565b805160609060006116e48260086142e3565b6001600160401b0381111561170957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611733576020820181803683370190505b50905060005b828110156118e457600085828151811061176357634e487b7160e01b600052603260045260246000fd5b602002602001015160000151905060006117a787848151811061179657634e487b7160e01b600052603260045260246000fd5b602002602001015160200151610ac0565b905060006117df8885815181106117ce57634e487b7160e01b600052603260045260246000fd5b602002602001015160400151610ac0565b6040516001600160e01b031960e086901b1660208201526001600160f01b031960f085811b8216602484015283901b16602682015290915060009060280160408051601f198184030181529190529050600061183c6008876142e3565b905060005b60088110156118cb5782818151811061186a57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b0319168861188484846142b7565b815181106118a257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350806118c381614360565b915050611841565b50505050505080806118dc90614360565b915050611739565b509392505050565b6118f461381a565b600061190084846125da565b9050600080600080601885016001600160c01b0381511693506030860190506001600160c01b0381511694506000805160206143d2833981519152856000805160206143d2833981519152600160c01b870908604887015160608801516001600160c01b03908116975016945092506000805160206143d283398151915290508481600160c01b860908604080518082019091529283526020830152509695505050505050565b6119af61381a565b6000805160206143d28339815191528210611a185760405162461bcd60e51b815260206004820152602360248201527f6d6170546f506f696e7446543a20696e76616c6964206669656c6420656c656d604482015262195b9d60ea1b60648201526084016104b3565b816000611a2482612884565b91505060006000805160206143d283398151915280611a5357634e487b7160e01b600052601260045260246000fd5b83840990506000805160206143d283398151915260048208905060006000805160206143d283398151915277b3c4d79d41a91759a9e4c7e359b6b89eaec68e62effffffd8509905060006000805160206143d28339815191528383099050611aba816128ad565b90506000805160206143d283398151915282830991506000805160206143d283398151915281830991506000805160206143d283398151915282860991506000805160206143d2833981519152611b1f836000805160206143d2833981519152614302565b7759e26bcea0d48bacd4f263f1acdb5c4f5763473177fffffe0894506000805160206143d283398151915285860991506000805160206143d283398151915285830991506000805160206143d28339815191526003830891506000611b8383612884565b90935090508015611bcb5784611bae57611bab836000805160206143d2833981519152614302565b92505b505060408051808201909152938452602084015250909392505050565b6000805160206143d283398151915260018708611bf6906000805160206143d2833981519152614302565b95506000805160206143d283398151915286870992506000805160206143d283398151915286840992506000805160206143d2833981519152600384089250611c3e83612884565b90935090508015611c665784611bae57611bab836000805160206143d2833981519152614302565b6000805160206143d283398151915284850995506000805160206143d283398151915286870995506000805160206143d283398151915282870995506000805160206143d283398151915282870995506000805160206143d28339815191526001870895506000805160206143d283398151915286870992506000805160206143d283398151915286840992506000805160206143d2833981519152600384089250611d1183612884565b909350905080611d6e5760405162461bcd60e51b815260206004820152602260248201527f424c533a20626164206674206d617070696e6720696d706c656d656e7461746960448201526137b760f11b60648201526084016104b3565b84611bae57611bab836000805160206143d2833981519152614302565b60006107d382846142b7565b60006107d38284614302565b600080611dc988611db785600001516110a9565b80519060200120898660200151611e9d565b611e1f5760405162461bcd60e51b815260206004820152602160248201527f5472616e736974696f6e3a2053656e64657220646f6573206e6f7420657869736044820152601d60fa1b60648201526084016104b3565b600080611e328888888860000151610fd0565b9092509050600081600b811115611e5957634e487b7160e01b600052602160045260246000fd5b14611e6b57600093509150611e929050565b611e89611e77836110a9565b805190602001208a87602001516128b8565b93506000925050505b965096945050505050565b600084611eab8585856128b8565b1495945050505050565b8151600090819080611f135760405162461bcd60e51b815260206004820152602160248201527f424c533a206e756d626572206f66207075626c6963206b6579206973207a65726044820152606f60f81b60648201526084016104b3565b83518114611f815760405162461bcd60e51b815260206004820152603560248201527f424c533a206e756d626572206f66207075626c6963206b65797320616e64206d604482015274195cdcd859d95cc81b5d5cdd08189948195c5d585b605a1b60648201526084016104b3565b6000611f8e8260016142b7565b611f999060066142e3565b90506000816001600160401b03811115611fc357634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611fec578160200160208202803683370190505b50905087600060200201518160008151811061201857634e487b7160e01b600052603260045260246000fd5b602090810291909101015287600160200201518160018151811061204c57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250507f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28160028151811061209a57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250507f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed816003815181106120e857634e487b7160e01b600052603260045260246000fd5b6020026020010181815250507f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec8160048151811061213657634e487b7160e01b600052603260045260246000fd5b6020026020010181815250507f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d8160058151811061218457634e487b7160e01b600052603260045260246000fd5b60200260200101818152505060005b83811015612500578681815181106121bb57634e487b7160e01b600052603260045260246000fd5b60200260200101516000600281106121e357634e487b7160e01b600052603260045260246000fd5b6020020151826121f48360066142e3565b6121ff9060066142b7565b8151811061221d57634e487b7160e01b600052603260045260246000fd5b60200260200101818152505086818151811061224957634e487b7160e01b600052603260045260246000fd5b602002602001015160016002811061227157634e487b7160e01b600052603260045260246000fd5b6020020151826122828360066142e3565b61228d9060076142b7565b815181106122ab57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250508781815181106122d757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600481106122ff57634e487b7160e01b600052603260045260246000fd5b6020020151826123108360066142e3565b61231b9060086142b7565b8151811061233957634e487b7160e01b600052603260045260246000fd5b60200260200101818152505087818151811061236557634e487b7160e01b600052603260045260246000fd5b602002602001015160006004811061238d57634e487b7160e01b600052603260045260246000fd5b60200201518261239e8360066142e3565b6123a99060096142b7565b815181106123c757634e487b7160e01b600052603260045260246000fd5b6020026020010181815250508781815181106123f357634e487b7160e01b600052603260045260246000fd5b602002602001015160036004811061241b57634e487b7160e01b600052603260045260246000fd5b60200201518261242c8360066142e3565b61243790600a6142b7565b8151811061245557634e487b7160e01b600052603260045260246000fd5b60200260200101818152505087818151811061248157634e487b7160e01b600052603260045260246000fd5b60200260200101516002600481106124a957634e487b7160e01b600052603260045260246000fd5b6020020151826124ba8360066142e3565b6124c590600b6142b7565b815181106124e357634e487b7160e01b600052603260045260246000fd5b6020908102919091010152806124f881614360565b915050612193565b50612509613856565b6000739f19c6456854fda109dfc2b9ad45d9bf147c8557634e79f8ca6125308760016142b7565b6040518263ffffffff1660e01b815260040161254e91815260200190565b60206040518083038186803b15801561256657600080fd5b505afa15801561257a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259e9190613d6e565b90506020826020860260208601600885fa9550856125c757600080965096505050505050610f73565b5051151598600198509650505050505050565b805160609060006125ec8260206142b7565b6125f79060406142b7565b6126029060046142b7565b6001600160401b0381111561262757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612651576020820181803683370190505b5060408051606080825260808201909252919250600091906020820181803683370190505090506060820160005b84811015612699576020818801810151838301520161267f565b50830160008153600101606081536001016000815360018101879052602101602081535060006002836040516126cf91906140e3565b602060405180830381855afa1580156126ec573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061270f9190613d6e565b905060006042945084845281602085015260016040850153604184018890526020606185015360028460405161274591906140e3565b602060405180830381855afa158015612762573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906127859190613d6e565b9050806020840152808218806020860152506002604085015360418401889052602060618501536002846040516127bc91906140e3565b602060405180830381855afa1580156127d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906127fc9190613d6e565b90508060408401528082188060208601525060036040850153604184018890526020606185015360028460405161283391906140e3565b602060405180830381855afa158015612850573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906128739190613d6e565b606084015250909695505050505050565b6000806128908361299e565b9150826000805160206143d2833981519152838409149050915091565b6000610206826130d3565b600083815b835181101561035d57600185821c1661293057818482815181106128f157634e487b7160e01b600052603260045260246000fd5b6020026020010151604051602001612913929190918252602082015260400190565b60405160208183030381529060405280519060200120915061298c565b83818151811061295057634e487b7160e01b600052603260045260246000fd5b602002602001015182604051602001612973929190918252602082015260400190565b6040516020818303038152906040528051906020012091505b8061299681614360565b9150506128bd565b60006000805160206143d28339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60006000805160206143d28339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b600082601f830112613884578081fd5b8135602061389961389483614294565b614264565b80838252828201915082860187848660051b89010111156138b8578586fd5b855b858110156138f85781356001600160401b038111156138d7578788fd5b6138e58a87838c01016139b7565b85525092840192908401906001016138ba565b5090979650505050505050565b6000601f8381840112613916578182fd5b8235602061392661389483614294565b80838252828201915082870188848660071b8a01011115613945578687fd5b865b858110156139a957898783011261395c578788fd5b61396461421a565b8083608085018d811115613976578b8cfd5b8b5b600481101561399557823585529389019391890191600101613978565b509187525094860194925050600101613947565b509098975050505050505050565b600082601f8301126139c7578081fd5b813560206139d761389483614294565b80838252828201915082860187848660051b89010111156139f6578586fd5b855b858110156138f8578135845292840192908401906001016139f8565b600082601f830112613a24578081fd5b81356020613a3461389483614294565b80838252828201915082860187848660071b8901011115613a53578586fd5b855b858110156138f857613a678983613be3565b84529284019260809190910190600101613a55565b60008083601f840112613a8d578182fd5b5081356001600160401b03811115613aa3578182fd5b602083019150836020828501011115613abb57600080fd5b9250929050565b600082601f830112613ad2578081fd5b81356001600160401b03811115613aeb57613aeb6143bb565b613afe601f8201601f1916602001614264565b818152846020838601011115613b12578283fd5b816020850160208301379081016020019190915292915050565b600060808284031215613b3d578081fd5b613b4561421a565b905081356001600160401b0380821115613b5e57600080fd5b613b6a85838601613a14565b83526020840135915080821115613b8057600080fd5b613b8c85838601613874565b60208401526040840135915080821115613ba557600080fd5b613bb185838601613905565b60408401526060840135915080821115613bca57600080fd5b50613bd784828501613874565b60608301525092915050565b600060808284031215613bf4578081fd5b613bfc61421a565b90508135815260208201356020820152604082013560408201526060820135606082015292915050565b60008060208385031215613c38578182fd5b82356001600160401b0380821115613c4e578384fd5b818501915085601f830112613c61578384fd5b813581811115613c6f578485fd5b8660208260051b8501011115613c83578485fd5b60209290920196919550909350505050565b6000806000806000806000610100888a031215613cb0578283fd5b88601f890112613cbe578283fd5b613cc6614242565b808960408b018c811115613cd8578687fd5b865b6002811015613cf9578235855260209485019490920191600101613cda565b50919950503590506001600160401b0380821115613d15578485fd5b613d218b838c01613b2c565b975060608a0135965060808a0135955060a08a0135945060c08a0135935060e08a0135915080821115613d52578283fd5b50613d5f8a828b01613ac2565b91505092959891949750929550565b600060208284031215613d7f578081fd5b5051919050565b60008060008060808587031215613d9b578182fd5b8435935060208501356001600160401b0380821115613db8578384fd5b613dc488838901613ac2565b9450604087013593506060870135915080821115613de0578283fd5b9086019060a08289031215613df3578283fd5b613dfb614242565b613e058984613be3565b8152608083013582811115613e18578485fd5b613e248a8286016139b7565b6020830152509598949750929550505050565b60008060208385031215613e49578182fd5b82356001600160401b03811115613e5e578283fd5b613e6a85828601613a7c565b90969095509350505050565b60008060008060006101008688031215613e8e578283fd5b85356001600160401b03811115613ea3578384fd5b613eaf88828901613a7c565b9096509450506060860187811115613ec5578384fd5b60208701935060e0870188811115613edb578283fd5b959894975092955091933592915050565b60008060008060408587031215613f01578182fd5b84356001600160401b0380821115613f17578384fd5b613f2388838901613a7c565b90965094506020870135915080821115613f3b578384fd5b50613f4887828801613a7c565b95989497509550505050565b600060c08284031215613f65578081fd5b50919050565b600060c08284031215613f7c578081fd5b60405160c081018181106001600160401b0382111715613f9e57613f9e6143bb565b8060405250823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528091505092915050565b60008060008060808587031215613ff8578182fd5b505082516020840151604085015160609095015191969095509092509050565b60008060008060008060c08789031215614030578384fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60008151808452614079816020860160208601614319565b601f01601f19169290920160200192915050565b600c81106140ab57634e487b7160e01b600052602160045260246000fd5b9052565b60008183825b60048110156140d45781518352602092830192909101906001016140b5565b50505060808201905092915050565b600082516140f5818460208701614319565b9190910192915050565b602080825282518282018190526000919060409081850190868401855b8281101561414b578151805185528681015187860152850151858501526060909301929085019060010161411c565b5091979650505050505050565b8381526060602082015260006141716060830185614061565b905061094b604083018461408d565b6020815260006107d36020830184614061565b6060815260006141a66060830186614061565b82810360208401526141b88186614061565b91505061094b604083018461408d565b60208101610206828461408d565b6000808335601e198436030181126141ec578283fd5b8301803591506001600160401b03821115614205578283fd5b602001915036819003821315613abb57600080fd5b604051608081016001600160401b038111828210171561423c5761423c6143bb565b60405290565b604080519081016001600160401b038111828210171561423c5761423c6143bb565b604051601f8201601f191681016001600160401b038111828210171561428c5761428c6143bb565b604052919050565b60006001600160401b038211156142ad576142ad6143bb565b5060051b60200190565b600082198211156142ca576142ca61438f565b500190565b6000826142de576142de6143a5565b500490565b60008160001904831182151516156142fd576142fd61438f565b500290565b6000828210156143145761431461438f565b500390565b60005b8381101561433457818101518382015260200161431c565b83811115614343576000848401525b50505050565b6000816143585761435861438f565b506000190190565b60006000198214156143745761437461438f565b5060010190565b60008261438a5761438a6143a5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a164736f6c6343000804000a",
}

// FrontendMassMigrationABI is the input ABI used to generate the binding from.
// Deprecated: Use FrontendMassMigrationMetaData.ABI instead.
var FrontendMassMigrationABI = FrontendMassMigrationMetaData.ABI

// FrontendMassMigrationBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use FrontendMassMigrationMetaData.Bin instead.
var FrontendMassMigrationBin = FrontendMassMigrationMetaData.Bin

// DeployFrontendMassMigration deploys a new Ethereum contract, binding an instance of FrontendMassMigration to it.
func DeployFrontendMassMigration(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *FrontendMassMigration, error) {
	parsed, err := FrontendMassMigrationMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(FrontendMassMigrationBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FrontendMassMigration{FrontendMassMigrationCaller: FrontendMassMigrationCaller{contract: contract}, FrontendMassMigrationTransactor: FrontendMassMigrationTransactor{contract: contract}, FrontendMassMigrationFilterer: FrontendMassMigrationFilterer{contract: contract}}, nil
}

// FrontendMassMigration is an auto generated Go binding around an Ethereum contract.
type FrontendMassMigration struct {
	FrontendMassMigrationCaller     // Read-only binding to the contract
	FrontendMassMigrationTransactor // Write-only binding to the contract
	FrontendMassMigrationFilterer   // Log filterer for contract events
}

// FrontendMassMigrationCaller is an auto generated read-only Go binding around an Ethereum contract.
type FrontendMassMigrationCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendMassMigrationTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FrontendMassMigrationTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendMassMigrationFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FrontendMassMigrationFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendMassMigrationSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FrontendMassMigrationSession struct {
	Contract     *FrontendMassMigration // Generic contract binding to set the session for
	CallOpts     bind.CallOpts          // Call options to use throughout this session
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// FrontendMassMigrationCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FrontendMassMigrationCallerSession struct {
	Contract *FrontendMassMigrationCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                // Call options to use throughout this session
}

// FrontendMassMigrationTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FrontendMassMigrationTransactorSession struct {
	Contract     *FrontendMassMigrationTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                // Transaction auth options to use throughout this session
}

// FrontendMassMigrationRaw is an auto generated low-level Go binding around an Ethereum contract.
type FrontendMassMigrationRaw struct {
	Contract *FrontendMassMigration // Generic contract binding to access the raw methods on
}

// FrontendMassMigrationCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FrontendMassMigrationCallerRaw struct {
	Contract *FrontendMassMigrationCaller // Generic read-only contract binding to access the raw methods on
}

// FrontendMassMigrationTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FrontendMassMigrationTransactorRaw struct {
	Contract *FrontendMassMigrationTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFrontendMassMigration creates a new instance of FrontendMassMigration, bound to a specific deployed contract.
func NewFrontendMassMigration(address common.Address, backend bind.ContractBackend) (*FrontendMassMigration, error) {
	contract, err := bindFrontendMassMigration(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FrontendMassMigration{FrontendMassMigrationCaller: FrontendMassMigrationCaller{contract: contract}, FrontendMassMigrationTransactor: FrontendMassMigrationTransactor{contract: contract}, FrontendMassMigrationFilterer: FrontendMassMigrationFilterer{contract: contract}}, nil
}

// NewFrontendMassMigrationCaller creates a new read-only instance of FrontendMassMigration, bound to a specific deployed contract.
func NewFrontendMassMigrationCaller(address common.Address, caller bind.ContractCaller) (*FrontendMassMigrationCaller, error) {
	contract, err := bindFrontendMassMigration(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FrontendMassMigrationCaller{contract: contract}, nil
}

// NewFrontendMassMigrationTransactor creates a new write-only instance of FrontendMassMigration, bound to a specific deployed contract.
func NewFrontendMassMigrationTransactor(address common.Address, transactor bind.ContractTransactor) (*FrontendMassMigrationTransactor, error) {
	contract, err := bindFrontendMassMigration(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FrontendMassMigrationTransactor{contract: contract}, nil
}

// NewFrontendMassMigrationFilterer creates a new log filterer instance of FrontendMassMigration, bound to a specific deployed contract.
func NewFrontendMassMigrationFilterer(address common.Address, filterer bind.ContractFilterer) (*FrontendMassMigrationFilterer, error) {
	contract, err := bindFrontendMassMigration(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FrontendMassMigrationFilterer{contract: contract}, nil
}

// bindFrontendMassMigration binds a generic wrapper to an already deployed contract.
func bindFrontendMassMigration(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(FrontendMassMigrationABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FrontendMassMigration *FrontendMassMigrationRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FrontendMassMigration.Contract.FrontendMassMigrationCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FrontendMassMigration *FrontendMassMigrationRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FrontendMassMigration.Contract.FrontendMassMigrationTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FrontendMassMigration *FrontendMassMigrationRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FrontendMassMigration.Contract.FrontendMassMigrationTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FrontendMassMigration *FrontendMassMigrationCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FrontendMassMigration.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FrontendMassMigration *FrontendMassMigrationTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FrontendMassMigration.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FrontendMassMigration *FrontendMassMigrationTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FrontendMassMigration.Contract.contract.Transact(opts, method, params...)
}

// CheckSignature is a free data retrieval call binding the contract method 0x997ee238.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, uint256 spokeID, bytes txs) view returns(uint8)
func (_FrontendMassMigration *FrontendMassMigrationCaller) CheckSignature(opts *bind.CallOpts, signature [2]*big.Int, proof TypesSignatureProof, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, spokeID *big.Int, txs []byte) (uint8, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "checkSignature", signature, proof, stateRoot, accountRoot, domain, spokeID, txs)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CheckSignature is a free data retrieval call binding the contract method 0x997ee238.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, uint256 spokeID, bytes txs) view returns(uint8)
func (_FrontendMassMigration *FrontendMassMigrationSession) CheckSignature(signature [2]*big.Int, proof TypesSignatureProof, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, spokeID *big.Int, txs []byte) (uint8, error) {
	return _FrontendMassMigration.Contract.CheckSignature(&_FrontendMassMigration.CallOpts, signature, proof, stateRoot, accountRoot, domain, spokeID, txs)
}

// CheckSignature is a free data retrieval call binding the contract method 0x997ee238.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, uint256 spokeID, bytes txs) view returns(uint8)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) CheckSignature(signature [2]*big.Int, proof TypesSignatureProof, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, spokeID *big.Int, txs []byte) (uint8, error) {
	return _FrontendMassMigration.Contract.CheckSignature(&_FrontendMassMigration.CallOpts, signature, proof, stateRoot, accountRoot, domain, spokeID, txs)
}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Compress(opts *bind.CallOpts, encodedTxs [][]byte) ([]byte, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "compress", encodedTxs)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationSession) Compress(encodedTxs [][]byte) ([]byte, error) {
	return _FrontendMassMigration.Contract.Compress(&_FrontendMassMigration.CallOpts, encodedTxs)
}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Compress(encodedTxs [][]byte) ([]byte, error) {
	return _FrontendMassMigration.Contract.Compress(&_FrontendMassMigration.CallOpts, encodedTxs)
}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Decode(opts *bind.CallOpts, encodedTx []byte) (OffchainMassMigration, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "decode", encodedTx)

	if err != nil {
		return *new(OffchainMassMigration), err
	}

	out0 := *abi.ConvertType(out[0], new(OffchainMassMigration)).(*OffchainMassMigration)

	return out0, err

}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendMassMigration *FrontendMassMigrationSession) Decode(encodedTx []byte) (OffchainMassMigration, error) {
	return _FrontendMassMigration.Contract.Decode(&_FrontendMassMigration.CallOpts, encodedTx)
}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Decode(encodedTx []byte) (OffchainMassMigration, error) {
	return _FrontendMassMigration.Contract.Decode(&_FrontendMassMigration.CallOpts, encodedTx)
}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256)[])
func (_FrontendMassMigration *FrontendMassMigrationCaller) Decompress(opts *bind.CallOpts, txs []byte) ([]TxMassMigration, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "decompress", txs)

	if err != nil {
		return *new([]TxMassMigration), err
	}

	out0 := *abi.ConvertType(out[0], new([]TxMassMigration)).(*[]TxMassMigration)

	return out0, err

}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256)[])
func (_FrontendMassMigration *FrontendMassMigrationSession) Decompress(txs []byte) ([]TxMassMigration, error) {
	return _FrontendMassMigration.Contract.Decompress(&_FrontendMassMigration.CallOpts, txs)
}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256)[])
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Decompress(txs []byte) ([]TxMassMigration, error) {
	return _FrontendMassMigration.Contract.Decompress(&_FrontendMassMigration.CallOpts, txs)
}

// Encode is a free data retrieval call binding the contract method 0x08909a83.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Encode(opts *bind.CallOpts, _tx OffchainMassMigration) ([]byte, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "encode", _tx)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Encode is a free data retrieval call binding the contract method 0x08909a83.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationSession) Encode(_tx OffchainMassMigration) ([]byte, error) {
	return _FrontendMassMigration.Contract.Encode(&_FrontendMassMigration.CallOpts, _tx)
}

// Encode is a free data retrieval call binding the contract method 0x08909a83.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Encode(_tx OffchainMassMigration) ([]byte, error) {
	return _FrontendMassMigration.Contract.Encode(&_FrontendMassMigration.CallOpts, _tx)
}

// Process is a free data retrieval call binding the contract method 0x73b3ba35.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from) pure returns(bytes32 newRoot, bytes freshState, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Process(opts *bind.CallOpts, stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof) (struct {
	NewRoot    [32]byte
	FreshState []byte
	Result     uint8
}, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "process", stateRoot, encodedTx, tokenID, from)

	outstruct := new(struct {
		NewRoot    [32]byte
		FreshState []byte
		Result     uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.NewRoot = *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	outstruct.FreshState = *abi.ConvertType(out[1], new([]byte)).(*[]byte)
	outstruct.Result = *abi.ConvertType(out[2], new(uint8)).(*uint8)

	return *outstruct, err

}

// Process is a free data retrieval call binding the contract method 0x73b3ba35.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from) pure returns(bytes32 newRoot, bytes freshState, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationSession) Process(stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof) (struct {
	NewRoot    [32]byte
	FreshState []byte
	Result     uint8
}, error) {
	return _FrontendMassMigration.Contract.Process(&_FrontendMassMigration.CallOpts, stateRoot, encodedTx, tokenID, from)
}

// Process is a free data retrieval call binding the contract method 0x73b3ba35.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from) pure returns(bytes32 newRoot, bytes freshState, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Process(stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof) (struct {
	NewRoot    [32]byte
	FreshState []byte
	Result     uint8
}, error) {
	return _FrontendMassMigration.Contract.Process(&_FrontendMassMigration.CallOpts, stateRoot, encodedTx, tokenID, from)
}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCaller) SignBytes(opts *bind.CallOpts, encodedTx []byte) ([]byte, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "signBytes", encodedTx)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationSession) SignBytes(encodedTx []byte) ([]byte, error) {
	return _FrontendMassMigration.Contract.SignBytes(&_FrontendMassMigration.CallOpts, encodedTx)
}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) SignBytes(encodedTx []byte) ([]byte, error) {
	return _FrontendMassMigration.Contract.SignBytes(&_FrontendMassMigration.CallOpts, encodedTx)
}

// Validate is a free data retrieval call binding the contract method 0x5ef63f4f.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkey, bytes32 domain) view returns(bool)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Validate(opts *bind.CallOpts, encodedTx []byte, signature [2]*big.Int, pubkey [4]*big.Int, domain [32]byte) (bool, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "validate", encodedTx, signature, pubkey, domain)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Validate is a free data retrieval call binding the contract method 0x5ef63f4f.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkey, bytes32 domain) view returns(bool)
func (_FrontendMassMigration *FrontendMassMigrationSession) Validate(encodedTx []byte, signature [2]*big.Int, pubkey [4]*big.Int, domain [32]byte) (bool, error) {
	return _FrontendMassMigration.Contract.Validate(&_FrontendMassMigration.CallOpts, encodedTx, signature, pubkey, domain)
}

// Validate is a free data retrieval call binding the contract method 0x5ef63f4f.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkey, bytes32 domain) view returns(bool)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Validate(encodedTx []byte, signature [2]*big.Int, pubkey [4]*big.Int, domain [32]byte) (bool, error) {
	return _FrontendMassMigration.Contract.Validate(&_FrontendMassMigration.CallOpts, encodedTx, signature, pubkey, domain)
}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationCaller) ValidateAndApply(opts *bind.CallOpts, senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "validateAndApply", senderEncoded, encodedTx)

	outstruct := new(struct {
		NewSender   []byte
		NewReceiver []byte
		Result      uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.NewSender = *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	outstruct.NewReceiver = *abi.ConvertType(out[1], new([]byte)).(*[]byte)
	outstruct.Result = *abi.ConvertType(out[2], new(uint8)).(*uint8)

	return *outstruct, err

}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationSession) ValidateAndApply(senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	return _FrontendMassMigration.Contract.ValidateAndApply(&_FrontendMassMigration.CallOpts, senderEncoded, encodedTx)
}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) ValidateAndApply(senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	return _FrontendMassMigration.Contract.ValidateAndApply(&_FrontendMassMigration.CallOpts, senderEncoded, encodedTx)
}
