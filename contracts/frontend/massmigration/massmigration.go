// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package massmigration

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OffchainMassMigration is an auto generated low-level Go binding around an user-defined struct.
type OffchainMassMigration struct {
	TxType    *big.Int
	FromIndex *big.Int
	Amount    *big.Int
	Fee       *big.Int
	SpokeID   *big.Int
	Nonce     *big.Int
}

// TxMassMigration is an auto generated low-level Go binding around an user-defined struct.
type TxMassMigration struct {
	FromIndex *big.Int
	Amount    *big.Int
	Fee       *big.Int
}

// TypesSignatureProof is an auto generated low-level Go binding around an user-defined struct.
type TypesSignatureProof struct {
	States          []TypesUserState
	StateWitnesses  [][][32]byte
	Pubkeys         [][4]*big.Int
	PubkeyWitnesses [][][32]byte
}

// TypesStateMerkleProof is an auto generated low-level Go binding around an user-defined struct.
type TypesStateMerkleProof struct {
	State   TypesUserState
	Witness [][32]byte
}

// TypesUserState is an auto generated low-level Go binding around an user-defined struct.
type TypesUserState struct {
	PubkeyID *big.Int
	TokenID  *big.Int
	Balance  *big.Int
	Nonce    *big.Int
}

// FrontendMassMigrationABI is the input ABI used to generate the binding from.
const FrontendMassMigrationABI = "[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState[]\",\"name\":\"states\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"stateWitnesses\",\"type\":\"bytes32[][]\"},{\"internalType\":\"uint256[4][]\",\"name\":\"pubkeys\",\"type\":\"uint256[4][]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"pubkeyWitnesses\",\"type\":\"bytes32[][]\"}],\"internalType\":\"structTypes.SignatureProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"accountRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"name\":\"checkSignature\",\"outputs\":[{\"internalType\":\"enumTypes.Result\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedTxs\",\"type\":\"bytes[]\"}],\"name\":\"compress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"decode\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structOffchain.MassMigration\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"name\":\"decompress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"structTx.MassMigration[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structOffchain.MassMigration\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"name\":\"encode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"witness\",\"type\":\"bytes32[]\"}],\"internalType\":\"structTypes.StateMerkleProof\",\"name\":\"from\",\"type\":\"tuple\"}],\"name\":\"process\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"freshState\",\"type\":\"bytes\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"signBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"},{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"pubkey\",\"type\":\"uint256[4]\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"senderEncoded\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"validateAndApply\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newSender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"newReceiver\",\"type\":\"bytes\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// FrontendMassMigrationBin is the compiled bytecode used for deploying new contracts.
var FrontendMassMigrationBin = "0x608060405234801561001057600080fd5b50613dba806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806373b3ba351161006657806373b3ba3514610123578063997ee23814610145578063d8b1728e14610165578063e5c5e9a314610178578063fa3204711461019857610093565b806308909a83146100985780635cd3f3a1146100c15780635ef63f4f146100e15780635f7dde2214610101575b600080fd5b6100ab6100a636600461362e565b6101ab565b6040516100b891906138e3565b60405180910390f35b6100d46100cf366004613511565b6101cc565b6040516100b89190613849565b6100f46100ef366004613550565b6102dc565b6040516100b891906138a2565b61011461010f3660046135c6565b610448565b6040516100b8939291906138f6565b61013661013136600461345e565b610567565b6040516100b8939291906138bb565b610158610153366004613366565b6105cf565b6040516100b8919061392b565b6100ab610173366004613511565b61061a565b61018b610186366004613511565b6106b2565b6040516100b89190613c4c565b6100ab6101a63660046132f8565b610700565b60606101c46101bf36849003840184613645565b610820565b90505b919050565b6060600061020f84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061086b92505050565b90506060816001600160401b038111801561022957600080fd5b5060405190808252806020026020018201604052801561026357816020015b610250612e2c565b8152602001906001900390816102485790505b50905060005b828110156102d3576102b48187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061087f9050565b8282815181106102c057fe5b6020908102919091010152600101610269565b50949350505050565b60006102e6612e4d565b61032587878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108e592505050565b90506103348160400151610921565b506103428160600151610921565b5061034b612e2c565b60405180606001604052808360200151815260200183604001518152602001836060015181525090506060610389828460a001518560800151610990565b90506000806103f08960028060200260405190810160405280929190826002602002808284376000920191909152505060408051608081810190925291508b9060049083908390808284376000920191909152506103eb91508b9050876109d2565b610a91565b925090508161041a5760405162461bcd60e51b815260040161041190613a4f565b60405180910390fd5b806104375760405162461bcd60e51b815260040161041190613c25565b5060019a9950505050505050505050565b6060806000610455612e4d565b61049486868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108e592505050565b905061049e612e83565b6104dd89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c5492505050565b90506000816020015190506104fc818460400151856060015185610c86565b94509150600084600a81111561050e57fe5b146105395761051c82610d4e565b604080516020810190915260008152909650945061055d92505050565b61054c8260000151828560400151610d77565b945061055782610d4e565b95505050505b9450945094915050565b600060606000610575612e4d565b61057e876108e5565b9050610588612e2c565b60405180606001604052808360200151815260200183604001518152602001836060015181525090506105bd89828989610dae565b94509450945050509450945094915050565b60006105d9612eab565b6040518060a001604052808a815260200188815260200187815260200186815260200184815250905061060d818986610e20565b9998505050505050505050565b6060610624612e4d565b61066384848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108e592505050565b905061066d612e2c565b60405180606001604052808360200151815260200183604001518152602001836060015181525090506106a9818360a001518460800151610990565b95945050505050565b6106ba612e4d565b6106f983838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108e592505050565b9392505050565b606080826001600160401b038111801561071957600080fd5b5060405190808252806020026020018201604052801561075357816020015b610740612e2c565b8152602001906001900390816107385790505b50905060005b815181101561080e5761076a612e4d565b6107c586868481811061077957fe5b905060200281019061078b9190613cb8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108e592505050565b90506040518060600160405280826020015181526020018260400151815260200182606001518152508383815181106107fa57fe5b602090810291909101015250600101610759565b5061081881611148565b949350505050565b6060816000015182602001518360400151846060015185608001518660a0015160405160200161085596959493929190613c90565b6040516020818303038152906040529050919050565b6000600882518161087857fe5b0492915050565b610887612e2c565b506008908102919091016004810151600682015191909201516040805160608101825263ffffffff9094168452610fff808416600c94851c600f908116600a90810a9290920260208801529184169390941c1690920a029082015290565b6108ed612e4d565b8180602001905181019061090191906136d5565b60a087015260808601526060850152604084015260208301528152919050565b60008181805b600f8110156109635782158015906109405750600a8306155b1561095657600a8304925060018201915061095b565b610963565b600101610927565b50610fff8211156109865760405162461bcd60e51b815260040161041190613af7565b600c1b0192915050565b6060600584600001518560200151866040015186866040516020016109ba969594939291906137f9565b60405160208183030381529060405290509392505050565b6109da612ee2565b6109e2612ee2565b6109ec848461129b565b90506109f6612ee2565b610a078260005b6020020151611356565b9050610a11612ee2565b610a1c8360016109fd565b9050610a26612f00565b825181526020808401518282015282516040808401919091529083015160608301526000908460808460066107d05a03fa9050808015610a6557610a67565bfe5b5080610a855760405162461bcd60e51b815260040161041190613948565b50919695505050505050565b600080610a9c612f1e565b50604080516101808101825286518152602080880151818301527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2828401527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060808401919091527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec60808401527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d60a0840152865160c08401528682015160e084015290870151610100830152865161012083015286015161014082015290850151610160820152610b8e612f3d565b60405163273cfc6560e11b815260009073079d8077c465bd0bf0fc502ad2b846757e41566190634e79f8ca90610bc99060029060040161393f565b60206040518083038186803b158015610be157600080fd5b505afa158015610bf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c199190613446565b9050600060208361018086600886fa905080610c3f576000809550955050505050610c4c565b5050511515925060019150505b935093915050565b610c5c612e83565b81806020019051810190610c7091906136a0565b6060850152604084015260208301528152919050565b610c8e612e83565b600084610ca057508190506001610d45565b6000610cac86866116d2565b90508084604001511015610cc7578360029250925050610d45565b86846020015114610cdf578360039250925050610d45565b610ce7612e83565b60405180608001604052808660000151815260200186602001518152602001610d1d8488604001516116f790919063ffffffff16565b8152602001610d3a600188606001516116d290919063ffffffff16565b905293506000925050505b94509492505050565b6060816000015182602001518360400151846060015160405160200161085594939291906137a8565b6060610d81612e83565b6040518060800160405280868152602001858152602001848152602001600081525090506106a981610d4e565b600060606000610dce8787600001518789602001518a6040015189611739565b9093509050600081600a811115610de157fe5b14610dfc57604080516020810190915260008152915061055d565b8351516020870151610e1091908790610d77565b9150600090509450945094915050565b600080610e30856080015161086b565b90506060816001600160401b0381118015610e4a57600080fd5b50604051908082528060200260200182016040528015610e8457816020015b610e71612ee2565b815260200190600190039081610e695790505b5090506060826001600160401b0381118015610e9f57600080fd5b50604051908082528060200260200182016040528015610ec9578160200160208202803683370190505b50905060005b838110156110f85760001981850301610ee6612e2c565b60808a0151610ef5908361087f565b9050610f488a60200151610f1f8b600001518581518110610f1257fe5b6020026020010151610d4e565b8051906020012083600001518c602001518681518110610f3b57fe5b60200260200101516117ec565b610f645760405162461bcd60e51b81526004016104119061397f565b600089600001518381518110610f7657fe5b60200260200101516060015111610f9f5760405162461bcd60e51b815260040161041190613a7f565b6110118a604001518a604001518481518110610fb757fe5b6020026020010151604051602001610fcf9190613758565b604051602081830303815290604052805190602001208b600001518581518110610ff557fe5b6020026020010151600001518c606001518681518110610f3b57fe5b61102d5760405162461bcd60e51b815260040161041190613b9e565b600060018a60000151848151811061104157fe5b6020026020010151606001510390506000826000015166038d7ea4c6800001905060005b85811015611098578187828151811061107a57fe5b6020026020010151141561109057600019909201915b600101611065565b50808686815181106110a657fe5b60200260200101818152505060606110bf84848d610990565b90506110cf8d60600151826109d2565b8886815181106110db57fe5b602002602001018190525050505050508080600101915050610ecf565b5060008061110f8960000151896040015186611804565b925090508161112657600a955050505050506106f9565b80611139576005955050505050506106f9565b50600098975050505050505050565b805160609081600882026001600160401b038111801561116757600080fd5b506040519080825280601f01601f191660200182016040528015611192576020820181803683370190505b50905060005b828110156112935760008582815181106111ae57fe5b602002602001015160000151905060006111de8784815181106111cd57fe5b602002602001015160200151610921565b905060006112028885815181106111f157fe5b602002602001015160400151610921565b9050606083838360405160200161121b939291906137c3565b60408051601f1981840301815291905290506008850260005b60088110156112815782818151811061124957fe5b602001015160f81c60f81b888383018151811061126257fe5b60200101906001600160f81b031916908160001a905350600101611234565b50506001909401935061119892505050565b509392505050565b6112a3612ee2565b60606112af8484611c33565b9050600080600080601885016001600160c01b0381511693506030860190506001600160c01b038151169450600080516020613d8e83398151915285600080516020613d8e833981519152600160c01b870908604887015160608801516001600160c01b0390811697501694509250600080516020613d8e83398151915290508481600160c01b860908604080518082019091529283526020830152509695505050505050565b61135e612ee2565b600080516020613d8e833981519152821061138b5760405162461bcd60e51b815260040161041190613b5b565b81600061139782611eae565b9150506000600080516020613d8e833981519152806113b257fe5b8384099050600080516020613d8e8339815191526004820890506000600080516020613d8e83398151915277b3c4d79d41a91759a9e4c7e359b6b89eaec68e62effffffd850990506000600080516020613d8e833981519152838309905061141981611ed7565b9050600080516020613d8e8339815191528283099150600080516020613d8e8339815191528183099150600080516020613d8e8339815191528286099150600080516020613d8e83398151915282600080516020613d8e833981519152037759e26bcea0d48bacd4f263f1acdb5c4f5763473177fffffe089450600080516020613d8e8339815191528586099150600080516020613d8e8339815191528583099150600080516020613d8e83398151915260038308915060006114db83611eae565b9093509050801561151e57846114ff5782600080516020613d8e8339815191520392505b5050604080518082019091529384526020840152509091506101c79050565b600080516020613d8e83398151915260018708600080516020613d8e833981519152039550600080516020613d8e8339815191528061155957fe5b8687099250600080516020613d8e8339815191528684099250600080516020613d8e83398151915260038408925061159083611eae565b909350905080156115cf57846114ff57505060408051808201909152938452600080516020613d8e833981519152036020840152509091506101c79050565b600080516020613d8e8339815191528485099550600080516020613d8e8339815191528687099550600080516020613d8e8339815191528287099550600080516020613d8e8339815191528287099550600080516020613d8e833981519152600187089550600080516020613d8e8339815191528687099250600080516020613d8e8339815191528684099250600080516020613d8e83398151915260038408925061167a83611eae565b90935090508061169c5760405162461bcd60e51b815260040161041190613be3565b846116b55782600080516020613d8e8339815191520392505b505060408051808201909152938452602084015250909392505050565b6000828201838110156106f95760405162461bcd60e51b8152600401610411906139c3565b60006106f983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ee2565b60008061175f8861174d8560000151610d4e565b805190602001208986602001516117ec565b61177b5760405162461bcd60e51b815260040161041190613ab6565b611783612e83565b60006117958888888860000151610c86565b9092509050600081600a8111156117a857fe5b146117ba576000935091506117e19050565b6117d86117c683610d4e565b805190602001208a8760200151611f0e565b93506000925050505b965096945050505050565b6000846117fa858585611f0e565b1495945050505050565b81516000908190806118285760405162461bcd60e51b815260040161041190613b1a565b835181146118485760405162461bcd60e51b8152600401610411906139fa565b600660018201026060816001600160401b038111801561186757600080fd5b50604051908082528060200260200182016040528015611891578160200160208202803683370190505b5090508760006020020151816000815181106118a957fe5b60209081029190910101528760016020020151816001815181106118c957fe5b6020026020010181815250507f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28160028151811061190357fe5b6020026020010181815250507f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed8160038151811061193d57fe5b6020026020010181815250507f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec8160048151811061197757fe5b6020026020010181815250507f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d816005815181106119b157fe5b60200260200101818152505060005b83811015611b61578681815181106119d457fe5b60200260200101516000600281106119e857fe5b60200201518282600602600601815181106119ff57fe5b602002602001018181525050868181518110611a1757fe5b6020026020010151600160028110611a2b57fe5b6020020151828260060260070181518110611a4257fe5b602002602001018181525050878181518110611a5a57fe5b6020026020010151600160048110611a6e57fe5b6020020151828260060260080181518110611a8557fe5b602002602001018181525050878181518110611a9d57fe5b6020026020010151600060048110611ab157fe5b6020020151828260060260090181518110611ac857fe5b602002602001018181525050878181518110611ae057fe5b6020026020010151600360048110611af457fe5b60200201518282600602600a0181518110611b0b57fe5b602002602001018181525050878181518110611b2357fe5b6020026020010151600260048110611b3757fe5b60200201518282600602600b0181518110611b4e57fe5b60209081029190910101526001016119c0565b50611b6a612f3d565b60405163273cfc6560e11b815260009073079d8077c465bd0bf0fc502ad2b846757e41566190634e79f8ca90611ba790600189019060040161393f565b60206040518083038186803b158015611bbf57600080fd5b505afa158015611bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf79190613446565b90506020826020860260208601600885fa955085611c2057600080965096505050505050610c4c565b5051151598600198509650505050505050565b805160609081606482016001600160401b0381118015611c5257600080fd5b506040519080825280601f01601f191660200182016040528015611c7d576020820181803683370190505b506040805160608082526080820190925291925090816020820181803683370190505090506060820160005b84811015611cc35760208188018101518383015201611ca9565b5083016000815360010160608153600101600081536001810187905260210160208153506000600283604051611cf9919061378c565b602060405180830381855afa158015611d16573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611d399190613446565b9050600060429450848452816020850152600160408501536041840188905260206061850153600284604051611d6f919061378c565b602060405180830381855afa158015611d8c573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611daf9190613446565b905080602084015280821880602086015250600260408501536041840188905260206061850153600284604051611de6919061378c565b602060405180830381855afa158015611e03573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611e269190613446565b905080604084015280821880602086015250600360408501536041840188905260206061850153600284604051611e5d919061378c565b602060405180830381855afa158015611e7a573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611e9d9190613446565b606084015250909695505050505050565b600080611eba83611fb0565b915082600080516020613d8e833981519152838409149050915091565b60006101c4826126e5565b60008184841115611f065760405162461bcd60e51b815260040161041191906138e3565b505050900390565b600083815b83518110156102d357600185821c16611f695781848281518110611f3357fe5b6020026020010151604051602001611f4c9291906138ad565b604051602081830303815290604052805190602001209150611fa8565b838181518110611f7557fe5b602002602001015182604051602001611f8f9291906138ad565b6040516020818303038152906040528051906020012091505b600101611f13565b6000600080516020613d8e8339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab6000600080516020613d8e8339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985050868889099750868889099750868889099750868889099750868889099750868889099750868489099750868889099750868889099750868889099750868889099750868889099750868989099750868889099750868889099750868889099750868889099750868889099750868889099750868989099750868889099750868889099750868889099750868889099750868889099750868689099750868889099750868889099750868889099750868889099750868889099750868889099750868889099750868889099750868889099750868189099750508587880996508587880996508587880996508585880996508587880996508587880996508587880996508585880996508587880996508587880996508587880996508587880996508587880996508587880996508587880996508587880996508583880996508587880996508587880996508587880996508587880996508581880996505050838586099450838586099450838586099450838586099450838186099450508284850993508284850993508284850993508281850993508284850993508284850993508285850993508284850993508284850993508284850993508284850993508284850993508284850993508281850995945050505050565b60405180606001604052806000815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060a00160405280612ebe612ee2565b81526000602082018190526040820181905260608083019190915260809091015290565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b600082601f830112612f6b578081fd5b8135612f7e612f7982613d22565b613cfc565b818152915060208083019084810160005b84811015612fb857612fa6888484358a010161307a565b84529282019290820190600101612f8f565b505050505092915050565b6000601f8381840112612fd4578182fd5b8235612fe2612f7982613d22565b818152925060208084019085810160808085028801830189101561300557600080fd5b60005b8581101561306d57898784011261301e57600080fd5b61302782613cfc565b80848486018d81111561303957600080fd5b60005b60048110156130595782358552938801939188019160010161303c565b509188525095850195935050600101613008565b5050505050505092915050565b600082601f83011261308a578081fd5b8135613098612f7982613d22565b8181529150602080830190848101818402860182018710156130b957600080fd5b60005b84811015612fb8578135845292820192908201906001016130bc565b600082601f8301126130e8578081fd5b81356130f6612f7982613d22565b818152915060208083019084810160808085028701830188101561311957600080fd5b60005b858110156131405761312e89846132b3565b8552938301939181019160010161311c565b50505050505092915050565b60008083601f84011261315d578182fd5b5081356001600160401b03811115613173578182fd5b60208301915083602082850101111561318b57600080fd5b9250929050565b600082601f8301126131a2578081fd5b81356001600160401b038111156131b7578182fd5b6131ca601f8201601f1916602001613cfc565b91508082528360208285010111156131e157600080fd5b8060208401602084013760009082016020015292915050565b60006080828403121561320b578081fd5b6132156080613cfc565b905081356001600160401b038082111561322e57600080fd5b61323a858386016130d8565b8352602084013591508082111561325057600080fd5b61325c85838601612f5b565b6020840152604084013591508082111561327557600080fd5b61328185838601612fc3565b6040840152606084013591508082111561329a57600080fd5b506132a784828501612f5b565b60608301525092915050565b6000608082840312156132c4578081fd5b6132ce6080613cfc565b90508135815260208201356020820152604082013560408201526060820135606082015292915050565b6000806020838503121561330a578182fd5b82356001600160401b0380821115613320578384fd5b818501915085601f830112613333578384fd5b813581811115613341578485fd5b8660208083028501011115613354578485fd5b60209290920196919550909350505050565b6000806000806000806000610100888a031215613381578283fd5b88601f89011261338f578283fd5b600261339d612f7982613d41565b808a60408c018d8111156133af578788fd5b875b858110156133cf5782358552602094850194909201916001016133b1565b50919a50503591506001600160401b039050808211156133ed578485fd5b6133f98b838c016131fa565b975060608a0135965060808a0135955060a08a0135945060c08a0135935060e08a013591508082111561342a578283fd5b506134378a828b01613192565b91505092959891949750929550565b600060208284031215613457578081fd5b5051919050565b60008060008060808587031215613473578182fd5b8435935060208501356001600160401b0380821115613490578384fd5b61349c88838901613192565b94506040870135935060608701359150808211156134b8578283fd5b9086019060a082890312156134cb578283fd5b6134d56040613cfc565b6134df89846132b3565b81526080830135828111156134f2578485fd5b6134fe8a82860161307a565b6020830152509598949750929550505050565b60008060208385031215613523578182fd5b82356001600160401b03811115613538578283fd5b6135448582860161314c565b90969095509350505050565b60008060008060006101008688031215613568578283fd5b85356001600160401b0381111561357d578384fd5b6135898882890161314c565b909650945050606086018781111561359f578384fd5b60208701935060e08701888111156135b5578283fd5b959894975092955091933592915050565b600080600080604085870312156135db578182fd5b84356001600160401b03808211156135f1578384fd5b6135fd8883890161314c565b90965094506020870135915080821115613615578384fd5b506136228782880161314c565b95989497509550505050565b600060c0828403121561363f578081fd5b50919050565b600060c08284031215613656578081fd5b61366060c0613cfc565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528091505092915050565b600080600080608085870312156136b5578182fd5b505082516020840151604085015160609095015191969095509092509050565b60008060008060008060c087890312156136ed578384fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60008151808452613736816020860160208601613d5d565b601f01601f19169290920160200192915050565b600b811061375457fe5b9052565b60008183825b600481101561377d57815183526020928301929091019060010161375e565b50505060808201905092915050565b6000825161379e818460208701613d5d565b9190910192915050565b93845260208401929092526040830152606082015260800190565b60e09390931b6001600160e01b031916835260f091821b6001600160f01b03199081166004850152911b16600682015260080190565b60f89690961b6001600160f81b031916865260e094851b6001600160e01b0319908116600188015260058701949094526025860192909252831b8216604585015290911b166049820152604d0190565b602080825282518282018190526000919060409081850190868401855b828110156138955781518051855286810151878601528501518585015260609093019290850190600101613866565b5091979650505050505050565b901515815260200190565b918252602082015260400190565b6000848252606060208301526138d4606083018561371e565b9050610818604083018461374a565b6000602082526106f9602083018461371e565b600060608252613909606083018661371e565b828103602084015261391b818661371e565b915050610818604083018461374a565b60208101600b831061393957fe5b91905290565b90815260200190565b60208082526017908201527f424c533a20626e206164642063616c6c206661696c6564000000000000000000604082015260600190565b60208082526024908201527f41757468656e7469636974793a20737461746520696e636c7573696f6e20736960408201526333b732b960e11b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526035908201527f424c533a206e756d626572206f66207075626c6963206b65797320616e64206d604082015274195cdcd859d95cc81b5d5cdd08189948195c5d585b605a1b606082015260800190565b602080825260169082015275141c9958dbdb5c1a5b194818d85b1b0819985a5b195960521b604082015260600190565b60208082526018908201527f41757468656e7469636974793a207a65726f206e6f6e63650000000000000000604082015260600190565b60208082526021908201527f5472616e736974696f6e3a2053656e64657220646f6573206e6f7420657869736040820152601d60fa1b606082015260800190565b602080825260099082015268109859081a5b9c1d5d60ba1b604082015260600190565b60208082526021908201527f424c533a206e756d626572206f66207075626c6963206b6579206973207a65726040820152606f60f81b606082015260800190565b60208082526023908201527f6d6170546f506f696e7446543a20696e76616c6964206669656c6420656c656d604082015262195b9d60ea1b606082015260800190565b60208082526025908201527f41757468656e7469636974793a206163636f756e7420646f6573206e6f742065604082015264786973747360d81b606082015260800190565b60208082526022908201527f424c533a20626164206674206d617070696e6720696d706c656d656e7461746960408201526137b760f11b606082015260800190565b6020808252600d908201526c426164207369676e617475726560981b604082015260600190565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b958652602086019490945260408501929092526060840152608083015260a082015260c00190565b6000808335601e19843603018112613cce578283fd5b8301803591506001600160401b03821115613ce7578283fd5b60200191503681900382131561318b57600080fd5b6040518181016001600160401b0381118282101715613d1a57600080fd5b604052919050565b60006001600160401b03821115613d37578081fd5b5060209081020190565b60006001600160401b03821115613d56578081fd5b5060200290565b60005b83811015613d78578181015183820152602001613d60565b83811115613d87576000848401525b5050505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a164736f6c634300060c000a"

// DeployFrontendMassMigration deploys a new Ethereum contract, binding an instance of FrontendMassMigration to it.
func DeployFrontendMassMigration(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *FrontendMassMigration, error) {
	parsed, err := abi.JSON(strings.NewReader(FrontendMassMigrationABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(FrontendMassMigrationBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FrontendMassMigration{FrontendMassMigrationCaller: FrontendMassMigrationCaller{contract: contract}, FrontendMassMigrationTransactor: FrontendMassMigrationTransactor{contract: contract}, FrontendMassMigrationFilterer: FrontendMassMigrationFilterer{contract: contract}}, nil
}

// FrontendMassMigration is an auto generated Go binding around an Ethereum contract.
type FrontendMassMigration struct {
	FrontendMassMigrationCaller     // Read-only binding to the contract
	FrontendMassMigrationTransactor // Write-only binding to the contract
	FrontendMassMigrationFilterer   // Log filterer for contract events
}

// FrontendMassMigrationCaller is an auto generated read-only Go binding around an Ethereum contract.
type FrontendMassMigrationCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendMassMigrationTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FrontendMassMigrationTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendMassMigrationFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FrontendMassMigrationFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendMassMigrationSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FrontendMassMigrationSession struct {
	Contract     *FrontendMassMigration // Generic contract binding to set the session for
	CallOpts     bind.CallOpts          // Call options to use throughout this session
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// FrontendMassMigrationCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FrontendMassMigrationCallerSession struct {
	Contract *FrontendMassMigrationCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                // Call options to use throughout this session
}

// FrontendMassMigrationTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FrontendMassMigrationTransactorSession struct {
	Contract     *FrontendMassMigrationTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                // Transaction auth options to use throughout this session
}

// FrontendMassMigrationRaw is an auto generated low-level Go binding around an Ethereum contract.
type FrontendMassMigrationRaw struct {
	Contract *FrontendMassMigration // Generic contract binding to access the raw methods on
}

// FrontendMassMigrationCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FrontendMassMigrationCallerRaw struct {
	Contract *FrontendMassMigrationCaller // Generic read-only contract binding to access the raw methods on
}

// FrontendMassMigrationTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FrontendMassMigrationTransactorRaw struct {
	Contract *FrontendMassMigrationTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFrontendMassMigration creates a new instance of FrontendMassMigration, bound to a specific deployed contract.
func NewFrontendMassMigration(address common.Address, backend bind.ContractBackend) (*FrontendMassMigration, error) {
	contract, err := bindFrontendMassMigration(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FrontendMassMigration{FrontendMassMigrationCaller: FrontendMassMigrationCaller{contract: contract}, FrontendMassMigrationTransactor: FrontendMassMigrationTransactor{contract: contract}, FrontendMassMigrationFilterer: FrontendMassMigrationFilterer{contract: contract}}, nil
}

// NewFrontendMassMigrationCaller creates a new read-only instance of FrontendMassMigration, bound to a specific deployed contract.
func NewFrontendMassMigrationCaller(address common.Address, caller bind.ContractCaller) (*FrontendMassMigrationCaller, error) {
	contract, err := bindFrontendMassMigration(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FrontendMassMigrationCaller{contract: contract}, nil
}

// NewFrontendMassMigrationTransactor creates a new write-only instance of FrontendMassMigration, bound to a specific deployed contract.
func NewFrontendMassMigrationTransactor(address common.Address, transactor bind.ContractTransactor) (*FrontendMassMigrationTransactor, error) {
	contract, err := bindFrontendMassMigration(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FrontendMassMigrationTransactor{contract: contract}, nil
}

// NewFrontendMassMigrationFilterer creates a new log filterer instance of FrontendMassMigration, bound to a specific deployed contract.
func NewFrontendMassMigrationFilterer(address common.Address, filterer bind.ContractFilterer) (*FrontendMassMigrationFilterer, error) {
	contract, err := bindFrontendMassMigration(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FrontendMassMigrationFilterer{contract: contract}, nil
}

// bindFrontendMassMigration binds a generic wrapper to an already deployed contract.
func bindFrontendMassMigration(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(FrontendMassMigrationABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FrontendMassMigration *FrontendMassMigrationRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FrontendMassMigration.Contract.FrontendMassMigrationCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FrontendMassMigration *FrontendMassMigrationRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FrontendMassMigration.Contract.FrontendMassMigrationTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FrontendMassMigration *FrontendMassMigrationRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FrontendMassMigration.Contract.FrontendMassMigrationTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FrontendMassMigration *FrontendMassMigrationCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FrontendMassMigration.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FrontendMassMigration *FrontendMassMigrationTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FrontendMassMigration.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FrontendMassMigration *FrontendMassMigrationTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FrontendMassMigration.Contract.contract.Transact(opts, method, params...)
}

// CheckSignature is a free data retrieval call binding the contract method 0x997ee238.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, uint256 spokeID, bytes txs) view returns(uint8)
func (_FrontendMassMigration *FrontendMassMigrationCaller) CheckSignature(opts *bind.CallOpts, signature [2]*big.Int, proof TypesSignatureProof, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, spokeID *big.Int, txs []byte) (uint8, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "checkSignature", signature, proof, stateRoot, accountRoot, domain, spokeID, txs)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CheckSignature is a free data retrieval call binding the contract method 0x997ee238.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, uint256 spokeID, bytes txs) view returns(uint8)
func (_FrontendMassMigration *FrontendMassMigrationSession) CheckSignature(signature [2]*big.Int, proof TypesSignatureProof, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, spokeID *big.Int, txs []byte) (uint8, error) {
	return _FrontendMassMigration.Contract.CheckSignature(&_FrontendMassMigration.CallOpts, signature, proof, stateRoot, accountRoot, domain, spokeID, txs)
}

// CheckSignature is a free data retrieval call binding the contract method 0x997ee238.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, uint256 spokeID, bytes txs) view returns(uint8)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) CheckSignature(signature [2]*big.Int, proof TypesSignatureProof, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, spokeID *big.Int, txs []byte) (uint8, error) {
	return _FrontendMassMigration.Contract.CheckSignature(&_FrontendMassMigration.CallOpts, signature, proof, stateRoot, accountRoot, domain, spokeID, txs)
}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Compress(opts *bind.CallOpts, encodedTxs [][]byte) ([]byte, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "compress", encodedTxs)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationSession) Compress(encodedTxs [][]byte) ([]byte, error) {
	return _FrontendMassMigration.Contract.Compress(&_FrontendMassMigration.CallOpts, encodedTxs)
}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Compress(encodedTxs [][]byte) ([]byte, error) {
	return _FrontendMassMigration.Contract.Compress(&_FrontendMassMigration.CallOpts, encodedTxs)
}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Decode(opts *bind.CallOpts, encodedTx []byte) (OffchainMassMigration, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "decode", encodedTx)

	if err != nil {
		return *new(OffchainMassMigration), err
	}

	out0 := *abi.ConvertType(out[0], new(OffchainMassMigration)).(*OffchainMassMigration)

	return out0, err

}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendMassMigration *FrontendMassMigrationSession) Decode(encodedTx []byte) (OffchainMassMigration, error) {
	return _FrontendMassMigration.Contract.Decode(&_FrontendMassMigration.CallOpts, encodedTx)
}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Decode(encodedTx []byte) (OffchainMassMigration, error) {
	return _FrontendMassMigration.Contract.Decode(&_FrontendMassMigration.CallOpts, encodedTx)
}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256)[])
func (_FrontendMassMigration *FrontendMassMigrationCaller) Decompress(opts *bind.CallOpts, txs []byte) ([]TxMassMigration, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "decompress", txs)

	if err != nil {
		return *new([]TxMassMigration), err
	}

	out0 := *abi.ConvertType(out[0], new([]TxMassMigration)).(*[]TxMassMigration)

	return out0, err

}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256)[])
func (_FrontendMassMigration *FrontendMassMigrationSession) Decompress(txs []byte) ([]TxMassMigration, error) {
	return _FrontendMassMigration.Contract.Decompress(&_FrontendMassMigration.CallOpts, txs)
}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256)[])
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Decompress(txs []byte) ([]TxMassMigration, error) {
	return _FrontendMassMigration.Contract.Decompress(&_FrontendMassMigration.CallOpts, txs)
}

// Encode is a free data retrieval call binding the contract method 0x08909a83.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Encode(opts *bind.CallOpts, _tx OffchainMassMigration) ([]byte, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "encode", _tx)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Encode is a free data retrieval call binding the contract method 0x08909a83.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationSession) Encode(_tx OffchainMassMigration) ([]byte, error) {
	return _FrontendMassMigration.Contract.Encode(&_FrontendMassMigration.CallOpts, _tx)
}

// Encode is a free data retrieval call binding the contract method 0x08909a83.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Encode(_tx OffchainMassMigration) ([]byte, error) {
	return _FrontendMassMigration.Contract.Encode(&_FrontendMassMigration.CallOpts, _tx)
}

// Process is a free data retrieval call binding the contract method 0x73b3ba35.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from) pure returns(bytes32 newRoot, bytes freshState, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Process(opts *bind.CallOpts, stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof) (struct {
	NewRoot    [32]byte
	FreshState []byte
	Result     uint8
}, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "process", stateRoot, encodedTx, tokenID, from)

	outstruct := new(struct {
		NewRoot    [32]byte
		FreshState []byte
		Result     uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.NewRoot = *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	outstruct.FreshState = *abi.ConvertType(out[1], new([]byte)).(*[]byte)
	outstruct.Result = *abi.ConvertType(out[2], new(uint8)).(*uint8)

	return *outstruct, err

}

// Process is a free data retrieval call binding the contract method 0x73b3ba35.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from) pure returns(bytes32 newRoot, bytes freshState, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationSession) Process(stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof) (struct {
	NewRoot    [32]byte
	FreshState []byte
	Result     uint8
}, error) {
	return _FrontendMassMigration.Contract.Process(&_FrontendMassMigration.CallOpts, stateRoot, encodedTx, tokenID, from)
}

// Process is a free data retrieval call binding the contract method 0x73b3ba35.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from) pure returns(bytes32 newRoot, bytes freshState, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Process(stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof) (struct {
	NewRoot    [32]byte
	FreshState []byte
	Result     uint8
}, error) {
	return _FrontendMassMigration.Contract.Process(&_FrontendMassMigration.CallOpts, stateRoot, encodedTx, tokenID, from)
}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCaller) SignBytes(opts *bind.CallOpts, encodedTx []byte) ([]byte, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "signBytes", encodedTx)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationSession) SignBytes(encodedTx []byte) ([]byte, error) {
	return _FrontendMassMigration.Contract.SignBytes(&_FrontendMassMigration.CallOpts, encodedTx)
}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTx) pure returns(bytes)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) SignBytes(encodedTx []byte) ([]byte, error) {
	return _FrontendMassMigration.Contract.SignBytes(&_FrontendMassMigration.CallOpts, encodedTx)
}

// Validate is a free data retrieval call binding the contract method 0x5ef63f4f.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkey, bytes32 domain) view returns(bool)
func (_FrontendMassMigration *FrontendMassMigrationCaller) Validate(opts *bind.CallOpts, encodedTx []byte, signature [2]*big.Int, pubkey [4]*big.Int, domain [32]byte) (bool, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "validate", encodedTx, signature, pubkey, domain)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Validate is a free data retrieval call binding the contract method 0x5ef63f4f.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkey, bytes32 domain) view returns(bool)
func (_FrontendMassMigration *FrontendMassMigrationSession) Validate(encodedTx []byte, signature [2]*big.Int, pubkey [4]*big.Int, domain [32]byte) (bool, error) {
	return _FrontendMassMigration.Contract.Validate(&_FrontendMassMigration.CallOpts, encodedTx, signature, pubkey, domain)
}

// Validate is a free data retrieval call binding the contract method 0x5ef63f4f.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkey, bytes32 domain) view returns(bool)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) Validate(encodedTx []byte, signature [2]*big.Int, pubkey [4]*big.Int, domain [32]byte) (bool, error) {
	return _FrontendMassMigration.Contract.Validate(&_FrontendMassMigration.CallOpts, encodedTx, signature, pubkey, domain)
}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationCaller) ValidateAndApply(opts *bind.CallOpts, senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	var out []interface{}
	err := _FrontendMassMigration.contract.Call(opts, &out, "validateAndApply", senderEncoded, encodedTx)

	outstruct := new(struct {
		NewSender   []byte
		NewReceiver []byte
		Result      uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.NewSender = *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	outstruct.NewReceiver = *abi.ConvertType(out[1], new([]byte)).(*[]byte)
	outstruct.Result = *abi.ConvertType(out[2], new(uint8)).(*uint8)

	return *outstruct, err

}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationSession) ValidateAndApply(senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	return _FrontendMassMigration.Contract.ValidateAndApply(&_FrontendMassMigration.CallOpts, senderEncoded, encodedTx)
}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendMassMigration *FrontendMassMigrationCallerSession) ValidateAndApply(senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	return _FrontendMassMigration.Contract.ValidateAndApply(&_FrontendMassMigration.CallOpts, senderEncoded, encodedTx)
}
