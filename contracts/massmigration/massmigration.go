// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package massmigration

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// TypesAuthCommon is an auto generated low-level Go binding around an user-defined struct.
type TypesAuthCommon struct {
	Signature   [2]*big.Int
	StateRoot   [32]byte
	AccountRoot [32]byte
	Domain      [32]byte
	Txs         []byte
}

// TypesMassMigrationBody is an auto generated low-level Go binding around an user-defined struct.
type TypesMassMigrationBody struct {
	AccountRoot  [32]byte
	Signature    [2]*big.Int
	SpokeID      *big.Int
	WithdrawRoot [32]byte
	TokenID      *big.Int
	Amount       *big.Int
	FeeReceiver  *big.Int
	Txs          []byte
}

// TypesSignatureProof is an auto generated low-level Go binding around an user-defined struct.
type TypesSignatureProof struct {
	States          []TypesUserState
	StateWitnesses  [][][32]byte
	Pubkeys         [][4]*big.Int
	PubkeyWitnesses [][][32]byte
}

// TypesStateMerkleProof is an auto generated low-level Go binding around an user-defined struct.
type TypesStateMerkleProof struct {
	State   TypesUserState
	Witness [][32]byte
}

// TypesUserState is an auto generated low-level Go binding around an user-defined struct.
type TypesUserState struct {
	PubkeyID *big.Int
	TokenID  *big.Int
	Balance  *big.Int
	Nonce    *big.Int
}

// MassMigrationABI is the input ABI used to generate the binding from.
const MassMigrationABI = "[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"accountRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"internalType\":\"structTypes.AuthCommon\",\"name\":\"common\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState[]\",\"name\":\"states\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"stateWitnesses\",\"type\":\"bytes32[][]\"},{\"internalType\":\"uint256[4][]\",\"name\":\"pubkeys\",\"type\":\"uint256[4][]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"pubkeyWitnesses\",\"type\":\"bytes32[][]\"}],\"internalType\":\"structTypes.SignatureProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"}],\"name\":\"checkSignature\",\"outputs\":[{\"internalType\":\"enumTypes.Result\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxTxSize\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"accountRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"withdrawRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeReceiver\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"internalType\":\"structTypes.MassMigrationBody\",\"name\":\"committed\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"witness\",\"type\":\"bytes32[]\"}],\"internalType\":\"structTypes.StateMerkleProof[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"processMassMigrationCommit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// MassMigrationBin is the compiled bytecode used for deploying new contracts.
var MassMigrationBin = "0x608060405234801561001057600080fd5b50613435806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ab5a164f1461003b578063be42c7c414610065575b600080fd5b61004e610049366004612d9e565b610085565b60405161005c929190613021565b60405180910390f35b610078610073366004612e91565b610271565b60405161005c919061303f565b6000806100958460e00151610288565b156100a557508490506008610268565b60006100b48560e001516102a0565b9050858111156100cb578660099250925050610268565b6100d361286e565b604080516020810190915260008082529081906060856001600160401b03811180156100fe57600080fd5b50604051908082528060200260200182016040528015610128578160200160208202803683370190505b50905060005b868110156101cd5760e08b015161014590826102b4565b955061016a8d878d608001518d858151811061015d57fe5b602002602001015161031a565b919e509098509250600088600a81111561018057fe5b14610194578c985050505050505050610268565b85602001518501945085604001518401935082805190602001208282815181106101ba57fe5b602090810291909101015260010161012e565b506101f68c8b60c001518c60800151868d8b815181106101e957fe5b602002602001015161038d565b909c509650600087600a81111561020957fe5b1461021c578b9750505050505050610268565b8960a001518414610239578b600697509750505050505050610268565b896060015161024782610447565b1461025e578b600797509750505050505050610268565b8b97505050505050505b94509492505050565b600061027e8484846106ef565b90505b9392505050565b6000600882518161029557fe5b06151590505b919050565b600060088251816102ad57fe5b0492915050565b6102bc61286e565b506008908102919091016004810151600682015191909201516040805160608101825263ffffffff9094168452610fff808416600c94851c600f908116600a90810a9290920260208801529184169390941c1690920a029082015290565b60006060600061033a8787600001518789602001518a6040015189610a17565b9093509050600081600a81111561034d57fe5b14610368576040805160208101909152600081529150610383565b835151602087015161037c91908790610aca565b9150600090505b9450945094915050565b6000806103b3876103a18560000151610b0a565b80519060200120888660200151610b49565b6103d85760405162461bcd60e51b81526004016103cf90613347565b60405180910390fd5b6103e061288f565b60006103f187878760000151610b61565b9092509050600081600a81111561040457fe5b146104165760009350915061043d9050565b61043461042283610b0a565b80519060200120898760200151610bd3565b93506000925050505b9550959350505050565b600060208251111561046b5760405162461bcd60e51b81526004016103cf90613246565b6104736128b7565b7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56381527f633dc4d7da7256660a892f8f1604a44b5432649cc8ec5cb3ced4c4e6ac94dd1d60208201527f890740a8eb06ce9be422cb8da5cdafc2b58c0a5e24036c578de2a433c828ff7d60408201527f3b8ec09e026fdc305365dfc94e189a81b38c7597b3d941c279f042e8206e0bd86060808301919091527fecd50eee38e386bd62be9bedb990706951b65fe053bd9d8a521af753d139e2da60808301527fdefff6d330bb5403f63b14f33b578274160de3a50df4efecf0e0db73bcdd3da560a08301528351600181811692918101901c90816001600160401b038111801561057c57600080fd5b506040519080825280602002602001820160405280156105a6578160200160208202803683370190505b5090508560005b60005b858503811015610635576000600182901b90508381815181106105cf57fe5b60200260200101518482600101815181106105e657fe5b60200260200101516040516020016105ff929190613013565b6040516020818303038152906040528051906020012085838151811061062157fe5b6020908102919091010152506001016105b0565b85600114156106a75782600182901b8151811061064e57fe5b602002602001015187836006811061066257fe5b6020020151604051602001610678929190613013565b6040516020818303038152906040528051906020012084828151811061069a57fe5b6020026020010181815250505b84600114156106b657506106cd565b5060018085169550938401841c93839250016105ad565b826000815181106106da57fe5b60200260200101519650505050505050919050565b6000806106ff85608001516102a0565b90506060816001600160401b038111801561071957600080fd5b5060405190808252806020026020018201604052801561075357816020015b6107406128d5565b8152602001906001900390816107385790505b5090506060826001600160401b038111801561076e57600080fd5b50604051908082528060200260200182016040528015610798578160200160208202803683370190505b50905060005b838110156109c757600019818503016107b561286e565b60808a01516107c490836102b4565b90506108178a602001516107ee8b6000015185815181106107e157fe5b6020026020010151610b0a565b8051906020012083600001518c60200151868151811061080a57fe5b6020026020010151610b49565b6108335760405162461bcd60e51b81526004016103cf906130bd565b60008960000151838151811061084557fe5b6020026020010151606001511161086e5760405162461bcd60e51b81526004016103cf9061318d565b6108e08a604001518a60400151848151811061088657fe5b602002602001015160405160200161089e9190612f58565b604051602081830303815290604052805190602001208b6000015185815181106108c457fe5b6020026020010151600001518c60600151868151811061080a57fe5b6108fc5760405162461bcd60e51b81526004016103cf906132c0565b600060018a60000151848151811061091057fe5b6020026020010151606001510390506000826000015166038d7ea4c6800001905060005b85811015610967578187828151811061094957fe5b6020026020010151141561095f57600019909201915b600101610934565b508086868151811061097557fe5b602002602001018181525050606061098e84848d610c7e565b905061099e8d6060015182610cc0565b8886815181106109aa57fe5b60200260200101819052505050505050808060010191505061079e565b506000806109de8960000151896040015186610d7f565b92509050816109f557600a95505050505050610281565b80610a0857600595505050505050610281565b50600098975050505050505050565b600080610a3d88610a2b8560000151610b0a565b80519060200120898660200151610b49565b610a595760405162461bcd60e51b81526004016103cf906131c4565b610a6161288f565b6000610a7388888888600001516111ae565b9092509050600081600a811115610a8657fe5b14610a9857600093509150610abf9050565b610ab6610aa483610b0a565b805190602001208a8760200151610bd3565b93506000925050505b965096945050505050565b6060610ad461288f565b604051806080016040528086815260200185815260200184815260200160008152509050610b0181610b0a565b95945050505050565b60608160000151826020015183604001518460600151604051602001610b339493929190612fa8565b6040516020818303038152906040529050919050565b600084610b57858585610bd3565b1495945050505050565b610b6961288f565b600084836020015114610b8157508190506004610bcb565b60405180608001604052808460000151815260200184602001518152602001610bb786866040015161127390919063ffffffff16565b815260608501516020909101529150600090505b935093915050565b600083815b8351811015610c7557600185821c16610c2e5781848281518110610bf857fe5b6020026020010151604051602001610c11929190613013565b604051602081830303815290604052805190602001209150610c6d565b838181518110610c3a57fe5b602002602001015182604051602001610c54929190613013565b6040516020818303038152906040528051906020012091505b600101610bd8565b50949350505050565b606060058460000151856020015186604001518686604051602001610ca896959493929190612fc3565b60405160208183030381529060405290509392505050565b610cc86128d5565b610cd06128d5565b610cda8484611298565b9050610ce46128d5565b610cf58260005b6020020151611353565b9050610cff6128d5565b610d0a836001610ceb565b9050610d146128f3565b825181526020808401518282015282516040808401919091529083015160608301526000908460808460066107d05a03fa9050808015610d5357610d55565bfe5b5080610d735760405162461bcd60e51b81526004016103cf90613086565b50919695505050505050565b8151600090819080610da35760405162461bcd60e51b81526004016103cf90613205565b83518114610dc35760405162461bcd60e51b81526004016103cf90613138565b600660018201026060816001600160401b0381118015610de257600080fd5b50604051908082528060200260200182016040528015610e0c578160200160208202803683370190505b509050876000602002015181600081518110610e2457fe5b6020908102919091010152876001602002015181600181518110610e4457fe5b6020026020010181815250507f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281600281518110610e7e57fe5b6020026020010181815250507f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81600381518110610eb857fe5b6020026020010181815250507f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81600481518110610ef257fe5b6020026020010181815250507f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81600581518110610f2c57fe5b60200260200101818152505060005b838110156110dc57868181518110610f4f57fe5b6020026020010151600060028110610f6357fe5b6020020151828260060260060181518110610f7a57fe5b602002602001018181525050868181518110610f9257fe5b6020026020010151600160028110610fa657fe5b6020020151828260060260070181518110610fbd57fe5b602002602001018181525050878181518110610fd557fe5b6020026020010151600160048110610fe957fe5b602002015182826006026008018151811061100057fe5b60200260200101818152505087818151811061101857fe5b602002602001015160006004811061102c57fe5b602002015182826006026009018151811061104357fe5b60200260200101818152505087818151811061105b57fe5b602002602001015160036004811061106f57fe5b60200201518282600602600a018151811061108657fe5b60200260200101818152505087818151811061109e57fe5b60200260200101516002600481106110b257fe5b60200201518282600602600b01815181106110c957fe5b6020908102919091010152600101610f3b565b506110e5612911565b60405163273cfc6560e11b815260009073079d8077c465bd0bf0fc502ad2b846757e41566190634e79f8ca9061112290600189019060040161338a565b60206040518083038186803b15801561113a57600080fd5b505afa15801561114e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111729190612d86565b90506020826020860260208601600885fa95508561119b57600080965096505050505050610bcb565b5051151598600198509650505050505050565b6111b661288f565b6000846111c857508190506001610268565b60006111d48686611273565b905080846040015110156111ef578360029250925050610268565b86846020015114611207578360039250925050610268565b61120f61288f565b604051806080016040528086600001518152602001866020015181526020016112458488604001516116cf90919063ffffffff16565b81526020016112626001886060015161127390919063ffffffff16565b905298600098509650505050505050565b6000828201838110156102815760405162461bcd60e51b81526004016103cf90613101565b6112a06128d5565b60606112ac8484611711565b9050600080600080601885016001600160c01b0381511693506030860190506001600160c01b03815116945060008051602061340983398151915285600080516020613409833981519152600160c01b870908604887015160608801516001600160c01b039081169750169450925060008051602061340983398151915290508481600160c01b860908604080518082019091529283526020830152509695505050505050565b61135b6128d5565b60008051602061340983398151915282106113885760405162461bcd60e51b81526004016103cf9061327d565b8160006113948261198c565b9150506000600080516020613409833981519152806113af57fe5b8384099050600080516020613409833981519152600482089050600060008051602061340983398151915277b3c4d79d41a91759a9e4c7e359b6b89eaec68e62effffffd8509905060006000805160206134098339815191528383099050611416816119b5565b905060008051602061340983398151915282830991506000805160206134098339815191528183099150600080516020613409833981519152828609915060008051602061340983398151915282600080516020613409833981519152037759e26bcea0d48bacd4f263f1acdb5c4f5763473177fffffe0894506000805160206134098339815191528586099150600080516020613409833981519152858309915060008051602061340983398151915260038308915060006114d88361198c565b9093509050801561151b57846114fc57826000805160206134098339815191520392505b50506040805180820190915293845260208401525090915061029b9050565b600080516020613409833981519152600187086000805160206134098339815191520395506000805160206134098339815191528061155657fe5b8687099250600080516020613409833981519152868409925060008051602061340983398151915260038408925061158d8361198c565b909350905080156115cc57846114fc575050604080518082019091529384526000805160206134098339815191520360208401525090915061029b9050565b6000805160206134098339815191528485099550600080516020613409833981519152868709955060008051602061340983398151915282870995506000805160206134098339815191528287099550600080516020613409833981519152600187089550600080516020613409833981519152868709925060008051602061340983398151915286840992506000805160206134098339815191526003840892506116778361198c565b9093509050806116995760405162461bcd60e51b81526004016103cf90613305565b846116b257826000805160206134098339815191520392505b505060408051808201909152938452602084015250909392505050565b600061028183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506119c6565b805160609081606482016001600160401b038111801561173057600080fd5b506040519080825280601f01601f19166020018201604052801561175b576020820181803683370190505b506040805160608082526080820190925291925090816020820181803683370190505090506060820160005b848110156117a15760208188018101518383015201611787565b50830160008153600101606081536001016000815360018101879052602101602081535060006002836040516117d79190612f8c565b602060405180830381855afa1580156117f4573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906118179190612d86565b905060006042945084845281602085015260016040850153604184018890526020606185015360028460405161184d9190612f8c565b602060405180830381855afa15801561186a573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061188d9190612d86565b9050806020840152808218806020860152506002604085015360418401889052602060618501536002846040516118c49190612f8c565b602060405180830381855afa1580156118e1573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906119049190612d86565b90508060408401528082188060208601525060036040850153604184018890526020606185015360028460405161193b9190612f8c565b602060405180830381855afa158015611958573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061197b9190612d86565b606084015250909695505050505050565b600080611998836119f2565b915082600080516020613409833981519152838409149050915091565b60006119c082612127565b92915050565b600081848411156119ea5760405162461bcd60e51b81526004016103cf9190613053565b505050900390565b60006000805160206134098339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60006000805160206134098339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60405180606001604052806000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b600082601f83011261293f578081fd5b813561295261294d826133b9565b613393565b818152915060208083019084810160005b8481101561298c5761297a888484358a0101612a4e565b84529282019290820190600101612963565b505050505092915050565b6000601f83818401126129a8578182fd5b82356129b661294d826133b9565b81815292506020808401908581016080808502880183018910156129d957600080fd5b60005b85811015612a415789878401126129f257600080fd5b6129fb82613393565b80848486018d811115612a0d57600080fd5b60005b6004811015612a2d57823585529388019391880191600101612a10565b5091885250958501959350506001016129dc565b5050505050505092915050565b600082601f830112612a5e578081fd5b8135612a6c61294d826133b9565b818152915060208083019084810181840286018201871015612a8d57600080fd5b60005b8481101561298c57813584529282019290820190600101612a90565b600082601f830112612abc578081fd5b8135612aca61294d826133b9565b818152915060208083019084810160005b8481101561298c578135870160a080601f19838c03011215612afc57600080fd5b612b066040613393565b612b128b878501612d41565b815290820135906001600160401b03821115612b2d57600080fd5b612b3b8b8784860101612a4e565b81870152865250509282019290820190600101612adb565b600082601f830112612b63578081fd5b8135612b7161294d826133b9565b8181529150602080830190848101608080850287018301881015612b9457600080fd5b60005b85811015612bbb57612ba98984612d41565b85529383019391810191600101612b97565b50505050505092915050565b600082601f830112612bd7578081fd5b612be16040613393565b9050808284604085011115612bf557600080fd5b60005b6002811015612c17578135835260209283019290910190600101612bf8565b50505092915050565b600082601f830112612c30578081fd5b81356001600160401b03811115612c45578182fd5b612c58601f8201601f1916602001613393565b9150808252836020828501011115612c6f57600080fd5b8060208401602084013760009082016020015292915050565b600060808284031215612c99578081fd5b612ca36080613393565b905081356001600160401b0380821115612cbc57600080fd5b612cc885838601612b53565b83526020840135915080821115612cde57600080fd5b612cea8583860161292f565b60208401526040840135915080821115612d0357600080fd5b612d0f85838601612997565b60408401526060840135915080821115612d2857600080fd5b50612d358482850161292f565b60608301525092915050565b600060808284031215612d52578081fd5b612d5c6080613393565b90508135815260208201356020820152604082013560408201526060820135606082015292915050565b600060208284031215612d97578081fd5b5051919050565b60008060008060808587031215612db3578283fd5b843593506020850135925060408501356001600160401b0380821115612dd7578384fd5b908601906101208289031215612deb578384fd5b610100612df781613393565b83358152612e088a60208601612bc7565b6020820152606084013560408201526080840135606082015260a0840135608082015260c084013560a082015260e084013560c082015281840135915082821115612e51578586fd5b612e5d8a838601612c20565b60e08201529450506060870135915080821115612e78578283fd5b50612e8587828801612aac565b91505092959194509250565b600080600060608486031215612ea5578081fd5b83356001600160401b0380821115612ebb578283fd5b9085019060c08288031215612ece578283fd5b612ed860a0613393565b612ee28884612bc7565b815260408301356020820152606083013560408201526080830135606082015260a083013582811115612f13578485fd5b612f1f89828601612c20565b60808301525094506020860135915080821115612f3a578283fd5b50612f4786828701612c88565b925050604084013590509250925092565b60008183825b6004811015612f7d578151835260209283019290910190600101612f5e565b50505060808201905092915050565b60008251612f9e8184602087016133d8565b9190910192915050565b93845260208401929092526040830152606082015260800190565b60f89690961b6001600160f81b031916865260e094851b6001600160e01b0319908116600188015260058701949094526025860192909252831b8216604585015290911b166049820152604d0190565b918252602082015260400190565b82815260408101600b831061303257fe5b8260208301529392505050565b60208101600b831061304d57fe5b91905290565b60006020825282518060208401526130728160408501602087016133d8565b601f01601f19169190910160400192915050565b60208082526017908201527f424c533a20626e206164642063616c6c206661696c6564000000000000000000604082015260600190565b60208082526024908201527f41757468656e7469636974793a20737461746520696e636c7573696f6e20736960408201526333b732b960e11b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526035908201527f424c533a206e756d626572206f66207075626c6963206b65797320616e64206d604082015274195cdcd859d95cc81b5d5cdd08189948195c5d585b605a1b606082015260800190565b60208082526018908201527f41757468656e7469636974793a207a65726f206e6f6e63650000000000000000604082015260600190565b60208082526021908201527f5472616e736974696f6e3a2053656e64657220646f6573206e6f7420657869736040820152601d60fa1b606082015260800190565b60208082526021908201527f424c533a206e756d626572206f66207075626c6963206b6579206973207a65726040820152606f60f81b606082015260800190565b6020808252601b908201527f4d65726b6c65547265653a20546f6f206d616e79206c65617665730000000000604082015260600190565b60208082526023908201527f6d6170546f506f696e7446543a20696e76616c6964206669656c6420656c656d604082015262195b9d60ea1b606082015260800190565b60208082526025908201527f41757468656e7469636974793a206163636f756e7420646f6573206e6f742065604082015264786973747360d81b606082015260800190565b60208082526022908201527f424c533a20626164206674206d617070696e6720696d706c656d656e7461746960408201526137b760f11b606082015260800190565b60208082526023908201527f5472616e736974696f6e3a20726563656976657220646f6573206e6f742065786040820152621a5cdd60ea1b606082015260800190565b90815260200190565b6040518181016001600160401b03811182821017156133b157600080fd5b604052919050565b60006001600160401b038211156133ce578081fd5b5060209081020190565b60005b838110156133f35781810151838201526020016133db565b83811115613402576000848401525b5050505056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a164736f6c634300060c000a"

// DeployMassMigration deploys a new Ethereum contract, binding an instance of MassMigration to it.
func DeployMassMigration(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *MassMigration, error) {
	parsed, err := abi.JSON(strings.NewReader(MassMigrationABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MassMigrationBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &MassMigration{MassMigrationCaller: MassMigrationCaller{contract: contract}, MassMigrationTransactor: MassMigrationTransactor{contract: contract}, MassMigrationFilterer: MassMigrationFilterer{contract: contract}}, nil
}

// MassMigration is an auto generated Go binding around an Ethereum contract.
type MassMigration struct {
	MassMigrationCaller     // Read-only binding to the contract
	MassMigrationTransactor // Write-only binding to the contract
	MassMigrationFilterer   // Log filterer for contract events
}

// MassMigrationCaller is an auto generated read-only Go binding around an Ethereum contract.
type MassMigrationCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MassMigrationTransactor is an auto generated write-only Go binding around an Ethereum contract.
type MassMigrationTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MassMigrationFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type MassMigrationFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MassMigrationSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type MassMigrationSession struct {
	Contract     *MassMigration    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MassMigrationCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type MassMigrationCallerSession struct {
	Contract *MassMigrationCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// MassMigrationTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type MassMigrationTransactorSession struct {
	Contract     *MassMigrationTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// MassMigrationRaw is an auto generated low-level Go binding around an Ethereum contract.
type MassMigrationRaw struct {
	Contract *MassMigration // Generic contract binding to access the raw methods on
}

// MassMigrationCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type MassMigrationCallerRaw struct {
	Contract *MassMigrationCaller // Generic read-only contract binding to access the raw methods on
}

// MassMigrationTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type MassMigrationTransactorRaw struct {
	Contract *MassMigrationTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMassMigration creates a new instance of MassMigration, bound to a specific deployed contract.
func NewMassMigration(address common.Address, backend bind.ContractBackend) (*MassMigration, error) {
	contract, err := bindMassMigration(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &MassMigration{MassMigrationCaller: MassMigrationCaller{contract: contract}, MassMigrationTransactor: MassMigrationTransactor{contract: contract}, MassMigrationFilterer: MassMigrationFilterer{contract: contract}}, nil
}

// NewMassMigrationCaller creates a new read-only instance of MassMigration, bound to a specific deployed contract.
func NewMassMigrationCaller(address common.Address, caller bind.ContractCaller) (*MassMigrationCaller, error) {
	contract, err := bindMassMigration(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MassMigrationCaller{contract: contract}, nil
}

// NewMassMigrationTransactor creates a new write-only instance of MassMigration, bound to a specific deployed contract.
func NewMassMigrationTransactor(address common.Address, transactor bind.ContractTransactor) (*MassMigrationTransactor, error) {
	contract, err := bindMassMigration(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MassMigrationTransactor{contract: contract}, nil
}

// NewMassMigrationFilterer creates a new log filterer instance of MassMigration, bound to a specific deployed contract.
func NewMassMigrationFilterer(address common.Address, filterer bind.ContractFilterer) (*MassMigrationFilterer, error) {
	contract, err := bindMassMigration(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MassMigrationFilterer{contract: contract}, nil
}

// bindMassMigration binds a generic wrapper to an already deployed contract.
func bindMassMigration(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MassMigrationABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MassMigration *MassMigrationRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _MassMigration.Contract.MassMigrationCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MassMigration *MassMigrationRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MassMigration.Contract.MassMigrationTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MassMigration *MassMigrationRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MassMigration.Contract.MassMigrationTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MassMigration *MassMigrationCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _MassMigration.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MassMigration *MassMigrationTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MassMigration.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MassMigration *MassMigrationTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MassMigration.Contract.contract.Transact(opts, method, params...)
}

// CheckSignature is a free data retrieval call binding the contract method 0xbe42c7c4.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, uint256 spokeID) view returns(uint8)
func (_MassMigration *MassMigrationCaller) CheckSignature(opts *bind.CallOpts, common TypesAuthCommon, proof TypesSignatureProof, spokeID *big.Int) (uint8, error) {
	var out []interface{}
	err := _MassMigration.contract.Call(opts, &out, "checkSignature", common, proof, spokeID)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CheckSignature is a free data retrieval call binding the contract method 0xbe42c7c4.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, uint256 spokeID) view returns(uint8)
func (_MassMigration *MassMigrationSession) CheckSignature(common TypesAuthCommon, proof TypesSignatureProof, spokeID *big.Int) (uint8, error) {
	return _MassMigration.Contract.CheckSignature(&_MassMigration.CallOpts, common, proof, spokeID)
}

// CheckSignature is a free data retrieval call binding the contract method 0xbe42c7c4.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, uint256 spokeID) view returns(uint8)
func (_MassMigration *MassMigrationCallerSession) CheckSignature(common TypesAuthCommon, proof TypesSignatureProof, spokeID *big.Int) (uint8, error) {
	return _MassMigration.Contract.CheckSignature(&_MassMigration.CallOpts, common, proof, spokeID)
}

// ProcessMassMigrationCommit is a free data retrieval call binding the contract method 0xab5a164f.
//
// Solidity: function processMassMigrationCommit(bytes32 stateRoot, uint256 maxTxSize, (bytes32,uint256[2],uint256,bytes32,uint256,uint256,uint256,bytes) committed, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_MassMigration *MassMigrationCaller) ProcessMassMigrationCommit(opts *bind.CallOpts, stateRoot [32]byte, maxTxSize *big.Int, committed TypesMassMigrationBody, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	var out []interface{}
	err := _MassMigration.contract.Call(opts, &out, "processMassMigrationCommit", stateRoot, maxTxSize, committed, proofs)

	if err != nil {
		return *new([32]byte), *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	out1 := *abi.ConvertType(out[1], new(uint8)).(*uint8)

	return out0, out1, err

}

// ProcessMassMigrationCommit is a free data retrieval call binding the contract method 0xab5a164f.
//
// Solidity: function processMassMigrationCommit(bytes32 stateRoot, uint256 maxTxSize, (bytes32,uint256[2],uint256,bytes32,uint256,uint256,uint256,bytes) committed, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_MassMigration *MassMigrationSession) ProcessMassMigrationCommit(stateRoot [32]byte, maxTxSize *big.Int, committed TypesMassMigrationBody, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	return _MassMigration.Contract.ProcessMassMigrationCommit(&_MassMigration.CallOpts, stateRoot, maxTxSize, committed, proofs)
}

// ProcessMassMigrationCommit is a free data retrieval call binding the contract method 0xab5a164f.
//
// Solidity: function processMassMigrationCommit(bytes32 stateRoot, uint256 maxTxSize, (bytes32,uint256[2],uint256,bytes32,uint256,uint256,uint256,bytes) committed, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_MassMigration *MassMigrationCallerSession) ProcessMassMigrationCommit(stateRoot [32]byte, maxTxSize *big.Int, committed TypesMassMigrationBody, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	return _MassMigration.Contract.ProcessMassMigrationCommit(&_MassMigration.CallOpts, stateRoot, maxTxSize, committed, proofs)
}
