// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package massmigration

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// TypesAuthCommon is an auto generated low-level Go binding around an user-defined struct.
type TypesAuthCommon struct {
	Signature   [2]*big.Int
	StateRoot   [32]byte
	AccountRoot [32]byte
	Domain      [32]byte
	Txs         []byte
}

// TypesMassMigrationBody is an auto generated low-level Go binding around an user-defined struct.
type TypesMassMigrationBody struct {
	AccountRoot  [32]byte
	Signature    [2]*big.Int
	SpokeID      *big.Int
	WithdrawRoot [32]byte
	TokenID      *big.Int
	Amount       *big.Int
	FeeReceiver  *big.Int
	Txs          []byte
}

// TypesSignatureProof is an auto generated low-level Go binding around an user-defined struct.
type TypesSignatureProof struct {
	States          []TypesUserState
	StateWitnesses  [][][32]byte
	Pubkeys         [][4]*big.Int
	PubkeyWitnesses [][][32]byte
}

// TypesStateMerkleProof is an auto generated low-level Go binding around an user-defined struct.
type TypesStateMerkleProof struct {
	State   TypesUserState
	Witness [][32]byte
}

// TypesUserState is an auto generated low-level Go binding around an user-defined struct.
type TypesUserState struct {
	PubkeyID *big.Int
	TokenID  *big.Int
	Balance  *big.Int
	Nonce    *big.Int
}

// MassMigrationABI is the input ABI used to generate the binding from.
const MassMigrationABI = "[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"accountRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"internalType\":\"structTypes.AuthCommon\",\"name\":\"common\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState[]\",\"name\":\"states\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"stateWitnesses\",\"type\":\"bytes32[][]\"},{\"internalType\":\"uint256[4][]\",\"name\":\"pubkeys\",\"type\":\"uint256[4][]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"pubkeyWitnesses\",\"type\":\"bytes32[][]\"}],\"internalType\":\"structTypes.SignatureProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"}],\"name\":\"checkSignature\",\"outputs\":[{\"internalType\":\"enumTypes.Result\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxTxSize\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"accountRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"spokeID\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"withdrawRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeReceiver\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"internalType\":\"structTypes.MassMigrationBody\",\"name\":\"committed\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"witness\",\"type\":\"bytes32[]\"}],\"internalType\":\"structTypes.StateMerkleProof[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"name\":\"processMassMigrationCommit\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// MassMigrationBin is the compiled bytecode used for deploying new contracts.
var MassMigrationBin = "0x608060405234801561001057600080fd5b506133da806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ab5a164f1461003b578063be42c7c414610065575b600080fd5b61004e610049366004612d54565b610085565b60405161005c929190613002565b60405180910390f35b610078610073366004612e47565b610271565b60405161005c9190613016565b6000806100958460e00151610288565b156100a557508490506008610268565b60006100b48560e001516102a0565b9050858111156100cb578660099250925050610268565b6100d3612824565b604080516020810190915260008082529081906060856001600160401b03811180156100fe57600080fd5b50604051908082528060200260200182016040528015610128578160200160208202803683370190505b50905060005b868110156101cd5760e08b015161014590826102b4565b955061016a8d878d608001518d858151811061015d57fe5b602002602001015161031c565b919e509098509250600088600a81111561018057fe5b14610194578c985050505050505050610268565b85602001518501945085604001518401935082805190602001208282815181106101ba57fe5b602090810291909101015260010161012e565b506101f68c8b60c001518c60800151868d8b815181106101e957fe5b602002602001015161038f565b909c509650600087600a81111561020957fe5b1461021c578b9750505050505050610268565b8960a001518414610239578b600697509750505050505050610268565b896060015161024782610449565b1461025e578b600797509750505050505050610268565b8b97505050505050505b94509492505050565b600061027e8484846106f1565b90505b9392505050565b6000600882518161029557fe5b06151590505b919050565b600060088251816102ad57fe5b0492915050565b6102bc612824565b50600881810283016004810151600682015191909201516040805160608101825263ffffffff9094168452610fff808416600c94851c600f908116600a90810a9290920260208801529184169390941c1690920a02908201525b92915050565b60006060600061033c8787600001518789602001518a6040015189610a19565b9093509050600081600a81111561034f57fe5b1461036a576040805160208101909152600081529150610385565b835151602087015161037e91908790610acc565b9150600090505b9450945094915050565b6000806103b5876103a38560000151610b0c565b80519060200120888660200151610b4b565b6103da5760405162461bcd60e51b81526004016103d19061331c565b60405180910390fd5b6103e2612845565b60006103f387878760000151610b63565b9092509050600081600a81111561040657fe5b146104185760009350915061043f9050565b61043661042483610b0c565b80519060200120898760200151610bd5565b93506000925050505b9550959350505050565b600060208251111561046d5760405162461bcd60e51b81526004016103d19061321b565b61047561286d565b7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56381527f633dc4d7da7256660a892f8f1604a44b5432649cc8ec5cb3ced4c4e6ac94dd1d60208201527f890740a8eb06ce9be422cb8da5cdafc2b58c0a5e24036c578de2a433c828ff7d60408201527f3b8ec09e026fdc305365dfc94e189a81b38c7597b3d941c279f042e8206e0bd86060808301919091527fecd50eee38e386bd62be9bedb990706951b65fe053bd9d8a521af753d139e2da60808301527fdefff6d330bb5403f63b14f33b578274160de3a50df4efecf0e0db73bcdd3da560a08301528351600181811692918101901c90816001600160401b038111801561057e57600080fd5b506040519080825280602002602001820160405280156105a8578160200160208202803683370190505b5090508560005b60005b858503811015610637576000600182901b90508381815181106105d157fe5b60200260200101518482600101815181106105e857fe5b6020026020010151604051602001610601929190612ff4565b6040516020818303038152906040528051906020012085838151811061062357fe5b6020908102919091010152506001016105b2565b85600114156106a95782600182901b8151811061065057fe5b602002602001015187836006811061066457fe5b602002015160405160200161067a929190612ff4565b6040516020818303038152906040528051906020012084828151811061069c57fe5b6020026020010181815250505b84600114156106b857506106cf565b5060018085169550938401841c93839250016105af565b826000815181106106dc57fe5b60200260200101519650505050505050919050565b60008061070185608001516102a0565b90506060816001600160401b038111801561071b57600080fd5b5060405190808252806020026020018201604052801561075557816020015b61074261288b565b81526020019060019003908161073a5790505b5090506060826001600160401b038111801561077057600080fd5b5060405190808252806020026020018201604052801561079a578160200160208202803683370190505b50905060005b838110156109c957600019818503016107b7612824565b60808a01516107c690836102b4565b90506108198a602001516107f08b6000015185815181106107e357fe5b6020026020010151610b0c565b8051906020012083600001518c60200151868151811061080c57fe5b6020026020010151610b4b565b6108355760405162461bcd60e51b81526004016103d19061305b565b60008960000151838151811061084757fe5b602002602001015160600151116108705760405162461bcd60e51b81526004016103d190613162565b6108e28a604001518a60400151848151811061088857fe5b60200260200101516040516020016108a09190612f1c565b604051602081830303815290604052805190602001208b6000015185815181106108c657fe5b6020026020010151600001518c60600151868151811061080c57fe5b6108fe5760405162461bcd60e51b81526004016103d190613295565b600060018a60000151848151811061091257fe5b6020026020010151606001510390506000826000015166038d7ea4c6800001905060005b85811015610969578187828151811061094b57fe5b6020026020010151141561096157600019909201915b600101610936565b508086868151811061097757fe5b602002602001018181525050606061099084848d610c80565b90506109a08d6060015182610cc2565b8886815181106109ac57fe5b6020026020010181905250505050505080806001019150506107a0565b506000806109e08960000151896040015186610d81565b92509050816109f757600a95505050505050610281565b80610a0a57600595505050505050610281565b50600098975050505050505050565b600080610a3f88610a2d8560000151610b0c565b80519060200120898660200151610b4b565b610a5b5760405162461bcd60e51b81526004016103d190613199565b610a63612845565b6000610a7588888888600001516111b0565b9092509050600081600a811115610a8857fe5b14610a9a57600093509150610ac19050565b610ab8610aa683610b0c565b805190602001208a8760200151610bd5565b93506000925050505b965096945050505050565b6060610ad6612845565b604051806080016040528086815260200185815260200184815260200160008152509050610b0381610b0c565b95945050505050565b60608160000151826020015183604001518460600151604051602001610b359493929190612f89565b6040516020818303038152906040529050919050565b600084610b59858585610bd5565b1495945050505050565b610b6b612845565b600084836020015114610b8357508190506004610bcd565b60405180608001604052808460000151815260200184602001518152602001610bb986866040015161127590919063ffffffff16565b815260608501516020909101529150600090505b935093915050565b600083815b8351811015610c7757600185821c16610c305781848281518110610bfa57fe5b6020026020010151604051602001610c13929190612ff4565b604051602081830303815290604052805190602001209150610c6f565b838181518110610c3c57fe5b602002602001015182604051602001610c56929190612ff4565b6040516020818303038152906040528051906020012091505b600101610bda565b50949350505050565b606060058460000151856020015186604001518686604051602001610caa96959493929190612fa4565b60405160208183030381529060405290509392505050565b610cca61288b565b610cd261288b565b610cdc848461129a565b9050610ce661288b565b610cf78260005b6020020151611355565b9050610d0161288b565b610d0c836001610ced565b9050610d166128a9565b825181526020808401518282015282516040808401919091529083015160608301526000908460808460066107d05a03fa9050808015610d5557610d57565bfe5b5080610d755760405162461bcd60e51b81526004016103d190613024565b50919695505050505050565b8151600090819080610da55760405162461bcd60e51b81526004016103d1906131da565b83518114610dc55760405162461bcd60e51b81526004016103d19061310d565b600660018201026060816001600160401b0381118015610de457600080fd5b50604051908082528060200260200182016040528015610e0e578160200160208202803683370190505b509050876000602002015181600081518110610e2657fe5b6020908102919091010152876001602002015181600181518110610e4657fe5b6020026020010181815250507f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281600281518110610e8057fe5b6020026020010181815250507f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81600381518110610eba57fe5b6020026020010181815250507f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81600481518110610ef457fe5b6020026020010181815250507f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d81600581518110610f2e57fe5b60200260200101818152505060005b838110156110de57868181518110610f5157fe5b6020026020010151600060028110610f6557fe5b6020020151828260060260060181518110610f7c57fe5b602002602001018181525050868181518110610f9457fe5b6020026020010151600160028110610fa857fe5b6020020151828260060260070181518110610fbf57fe5b602002602001018181525050878181518110610fd757fe5b6020026020010151600160048110610feb57fe5b602002015182826006026008018151811061100257fe5b60200260200101818152505087818151811061101a57fe5b602002602001015160006004811061102e57fe5b602002015182826006026009018151811061104557fe5b60200260200101818152505087818151811061105d57fe5b602002602001015160036004811061107157fe5b60200201518282600602600a018151811061108857fe5b6020026020010181815250508781815181106110a057fe5b60200260200101516002600481106110b457fe5b60200201518282600602600b01815181106110cb57fe5b6020908102919091010152600101610f3d565b506110e76128c7565b60405163273cfc6560e11b815260009073079d8077c465bd0bf0fc502ad2b846757e41566190634e79f8ca9061112490600189019060040161335f565b60206040518083038186803b15801561113c57600080fd5b505afa158015611150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111749190612d3c565b90506020826020860260208601600885fa95508561119d57600080965096505050505050610bcd565b5051151598600198509650505050505050565b6111b8612845565b6000846111ca57508190506001610268565b60006111d68686611275565b905080846040015110156111f1578360029250925050610268565b86846020015114611209578360039250925050610268565b611211612845565b604051806080016040528086600001518152602001866020015181526020016112478488604001516116d190919063ffffffff16565b81526020016112646001886060015161127590919063ffffffff16565b905298600098509650505050505050565b6000828201838110156102815760405162461bcd60e51b81526004016103d19061309f565b6112a261288b565b60606112ae84846116f9565b9050600080600080601885016001600160c01b0381511693506030860190506001600160c01b0381511694506000805160206133ae833981519152856000805160206133ae833981519152600160c01b870908604887015160608801516001600160c01b03908116975016945092506000805160206133ae83398151915290508481600160c01b860908604080518082019091529283526020830152509695505050505050565b61135d61288b565b6000805160206133ae833981519152821061138a5760405162461bcd60e51b81526004016103d190613252565b81600061139682611974565b91505060006000805160206133ae833981519152806113b157fe5b83840990506000805160206133ae83398151915260048208905060006000805160206133ae83398151915277b3c4d79d41a91759a9e4c7e359b6b89eaec68e62effffffd8509905060006000805160206133ae83398151915283830990506114188161199d565b90506000805160206133ae83398151915282830991506000805160206133ae83398151915281830991506000805160206133ae83398151915282860991506000805160206133ae833981519152826000805160206133ae833981519152037759e26bcea0d48bacd4f263f1acdb5c4f5763473177fffffe0894506000805160206133ae83398151915285860991506000805160206133ae83398151915285830991506000805160206133ae83398151915260038308915060006114da83611974565b9093509050801561151d57846114fe57826000805160206133ae8339815191520392505b50506040805180820190915293845260208401525090915061029b9050565b6000805160206133ae833981519152600187086000805160206133ae8339815191520395506000805160206133ae8339815191528061155857fe5b86870992506000805160206133ae83398151915286840992506000805160206133ae83398151915260038408925061158f83611974565b909350905080156115ce57846114fe575050604080518082019091529384526000805160206133ae8339815191520360208401525090915061029b9050565b6000805160206133ae83398151915284850995506000805160206133ae83398151915286870995506000805160206133ae83398151915282870995506000805160206133ae83398151915282870995506000805160206133ae8339815191526001870895506000805160206133ae83398151915286870992506000805160206133ae83398151915286840992506000805160206133ae83398151915260038408925061167983611974565b90935090508061169b5760405162461bcd60e51b81526004016103d1906132da565b846116b457826000805160206133ae8339815191520392505b505060408051808201909152938452602084015250909392505050565b6000828211156116f35760405162461bcd60e51b81526004016103d1906130d6565b50900390565b805160609081606482016001600160401b038111801561171857600080fd5b506040519080825280601f01601f191660200182016040528015611743576020820181803683370190505b506040805160608082526080820190925291925090816020820181803683370190505090506060820160005b84811015611789576020818801810151838301520161176f565b50830160008153600101606081536001016000815360018101879052602101602081535060006002836040516117bf9190612f50565b602060405180830381855afa1580156117dc573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906117ff9190612d3c565b90506000604294508484528160208501526001604085015360418401889052602060618501536002846040516118359190612f50565b602060405180830381855afa158015611852573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906118759190612d3c565b9050806020840152808218806020860152506002604085015360418401889052602060618501536002846040516118ac9190612f50565b602060405180830381855afa1580156118c9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906118ec9190612d3c565b9050806040840152808218806020860152506003604085015360418401889052602060618501536002846040516119239190612f50565b602060405180830381855afa158015611940573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906119639190612d3c565b606084015250909695505050505050565b600080611980836119a8565b9150826000805160206133ae833981519152838409149050915091565b6000610316826120dd565b60006000805160206133ae8339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60006000805160206133ae8339815191528083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60405180606001604052806000815260200160008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b600082601f8301126128f5578081fd5b81356129086129038261338e565b613368565b818152915060208083019084810160005b8481101561294257612930888484358a0101612a04565b84529282019290820190600101612919565b505050505092915050565b6000601f838184011261295e578182fd5b823561296c6129038261338e565b818152925060208084019085810160808085028801830189101561298f57600080fd5b60005b858110156129f75789878401126129a857600080fd5b6129b182613368565b80848486018d8111156129c357600080fd5b60005b60048110156129e3578235855293880193918801916001016129c6565b509188525095850195935050600101612992565b5050505050505092915050565b600082601f830112612a14578081fd5b8135612a226129038261338e565b818152915060208083019084810181840286018201871015612a4357600080fd5b60005b8481101561294257813584529282019290820190600101612a46565b600082601f830112612a72578081fd5b8135612a806129038261338e565b818152915060208083019084810160005b84811015612942578135870160a080601f19838c03011215612ab257600080fd5b612abc6040613368565b612ac88b878501612cf7565b815290820135906001600160401b03821115612ae357600080fd5b612af18b8784860101612a04565b81870152865250509282019290820190600101612a91565b600082601f830112612b19578081fd5b8135612b276129038261338e565b8181529150602080830190848101608080850287018301881015612b4a57600080fd5b60005b85811015612b7157612b5f8984612cf7565b85529383019391810191600101612b4d565b50505050505092915050565b600082601f830112612b8d578081fd5b612b976040613368565b9050808284604085011115612bab57600080fd5b60005b6002811015612bcd578135835260209283019290910190600101612bae565b50505092915050565b600082601f830112612be6578081fd5b81356001600160401b03811115612bfb578182fd5b612c0e601f8201601f1916602001613368565b9150808252836020828501011115612c2557600080fd5b8060208401602084013760009082016020015292915050565b600060808284031215612c4f578081fd5b612c596080613368565b905081356001600160401b0380821115612c7257600080fd5b612c7e85838601612b09565b83526020840135915080821115612c9457600080fd5b612ca0858386016128e5565b60208401526040840135915080821115612cb957600080fd5b612cc58583860161294d565b60408401526060840135915080821115612cde57600080fd5b50612ceb848285016128e5565b60608301525092915050565b600060808284031215612d08578081fd5b612d126080613368565b90508135815260208201356020820152604082013560408201526060820135606082015292915050565b600060208284031215612d4d578081fd5b5051919050565b60008060008060808587031215612d69578283fd5b843593506020850135925060408501356001600160401b0380821115612d8d578384fd5b908601906101208289031215612da1578384fd5b610100612dad81613368565b83358152612dbe8a60208601612b7d565b6020820152606084013560408201526080840135606082015260a0840135608082015260c084013560a082015260e084013560c082015281840135915082821115612e07578586fd5b612e138a838601612bd6565b60e08201529450506060870135915080821115612e2e578283fd5b50612e3b87828801612a62565b91505092959194509250565b600080600060608486031215612e5b578081fd5b83356001600160401b0380821115612e71578283fd5b9085019060c08288031215612e84578283fd5b612e8e60a0613368565b612e988884612b7d565b815260408301356020820152606083013560408201526080830135606082015260a083013582811115612ec9578485fd5b612ed589828601612bd6565b60808301525094506020860135915080821115612ef0578283fd5b50612efd86828701612c3e565b925050604084013590509250925092565b600b8110612f1857fe5b9052565b60008183825b6004811015612f41578151835260209283019290910190600101612f22565b50505060808201905092915050565b60008251815b81811015612f705760208186018101518583015201612f56565b81811115612f7e5782828501525b509190910192915050565b93845260208401929092526040830152606082015260800190565b60f89690961b6001600160f81b031916865260e094851b6001600160e01b0319908116600188015260058701949094526025860192909252831b8216604585015290911b166049820152604d0190565b918252602082015260400190565b828152604081016102816020830184612f0e565b602081016103168284612f0e565b60208082526017908201527f424c533a20626e206164642063616c6c206661696c6564000000000000000000604082015260600190565b60208082526024908201527f41757468656e7469636974793a20737461746520696e636c7573696f6e20736960408201526333b732b960e11b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526035908201527f424c533a206e756d626572206f66207075626c6963206b65797320616e64206d604082015274195cdcd859d95cc81b5d5cdd08189948195c5d585b605a1b606082015260800190565b60208082526018908201527f41757468656e7469636974793a207a65726f206e6f6e63650000000000000000604082015260600190565b60208082526021908201527f5472616e736974696f6e3a2053656e64657220646f6573206e6f7420657869736040820152601d60fa1b606082015260800190565b60208082526021908201527f424c533a206e756d626572206f66207075626c6963206b6579206973207a65726040820152606f60f81b606082015260800190565b6020808252601b908201527f4d65726b6c65547265653a20546f6f206d616e79206c65617665730000000000604082015260600190565b60208082526023908201527f6d6170546f506f696e7446543a20696e76616c6964206669656c6420656c656d604082015262195b9d60ea1b606082015260800190565b60208082526025908201527f41757468656e7469636974793a206163636f756e7420646f6573206e6f742065604082015264786973747360d81b606082015260800190565b60208082526022908201527f424c533a20626164206674206d617070696e6720696d706c656d656e7461746960408201526137b760f11b606082015260800190565b60208082526023908201527f5472616e736974696f6e3a20726563656976657220646f6573206e6f742065786040820152621a5cdd60ea1b606082015260800190565b90815260200190565b6040518181016001600160401b038111828210171561338657600080fd5b604052919050565b60006001600160401b038211156133a3578081fd5b506020908102019056fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a164736f6c634300060c000a"

// DeployMassMigration deploys a new Ethereum contract, binding an instance of MassMigration to it.
func DeployMassMigration(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *MassMigration, error) {
	parsed, err := abi.JSON(strings.NewReader(MassMigrationABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MassMigrationBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &MassMigration{MassMigrationCaller: MassMigrationCaller{contract: contract}, MassMigrationTransactor: MassMigrationTransactor{contract: contract}, MassMigrationFilterer: MassMigrationFilterer{contract: contract}}, nil
}

// MassMigration is an auto generated Go binding around an Ethereum contract.
type MassMigration struct {
	MassMigrationCaller     // Read-only binding to the contract
	MassMigrationTransactor // Write-only binding to the contract
	MassMigrationFilterer   // Log filterer for contract events
}

// MassMigrationCaller is an auto generated read-only Go binding around an Ethereum contract.
type MassMigrationCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MassMigrationTransactor is an auto generated write-only Go binding around an Ethereum contract.
type MassMigrationTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MassMigrationFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type MassMigrationFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MassMigrationSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type MassMigrationSession struct {
	Contract     *MassMigration    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MassMigrationCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type MassMigrationCallerSession struct {
	Contract *MassMigrationCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// MassMigrationTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type MassMigrationTransactorSession struct {
	Contract     *MassMigrationTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// MassMigrationRaw is an auto generated low-level Go binding around an Ethereum contract.
type MassMigrationRaw struct {
	Contract *MassMigration // Generic contract binding to access the raw methods on
}

// MassMigrationCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type MassMigrationCallerRaw struct {
	Contract *MassMigrationCaller // Generic read-only contract binding to access the raw methods on
}

// MassMigrationTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type MassMigrationTransactorRaw struct {
	Contract *MassMigrationTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMassMigration creates a new instance of MassMigration, bound to a specific deployed contract.
func NewMassMigration(address common.Address, backend bind.ContractBackend) (*MassMigration, error) {
	contract, err := bindMassMigration(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &MassMigration{MassMigrationCaller: MassMigrationCaller{contract: contract}, MassMigrationTransactor: MassMigrationTransactor{contract: contract}, MassMigrationFilterer: MassMigrationFilterer{contract: contract}}, nil
}

// NewMassMigrationCaller creates a new read-only instance of MassMigration, bound to a specific deployed contract.
func NewMassMigrationCaller(address common.Address, caller bind.ContractCaller) (*MassMigrationCaller, error) {
	contract, err := bindMassMigration(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MassMigrationCaller{contract: contract}, nil
}

// NewMassMigrationTransactor creates a new write-only instance of MassMigration, bound to a specific deployed contract.
func NewMassMigrationTransactor(address common.Address, transactor bind.ContractTransactor) (*MassMigrationTransactor, error) {
	contract, err := bindMassMigration(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MassMigrationTransactor{contract: contract}, nil
}

// NewMassMigrationFilterer creates a new log filterer instance of MassMigration, bound to a specific deployed contract.
func NewMassMigrationFilterer(address common.Address, filterer bind.ContractFilterer) (*MassMigrationFilterer, error) {
	contract, err := bindMassMigration(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MassMigrationFilterer{contract: contract}, nil
}

// bindMassMigration binds a generic wrapper to an already deployed contract.
func bindMassMigration(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MassMigrationABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MassMigration *MassMigrationRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _MassMigration.Contract.MassMigrationCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MassMigration *MassMigrationRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MassMigration.Contract.MassMigrationTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MassMigration *MassMigrationRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MassMigration.Contract.MassMigrationTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MassMigration *MassMigrationCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _MassMigration.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MassMigration *MassMigrationTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MassMigration.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MassMigration *MassMigrationTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MassMigration.Contract.contract.Transact(opts, method, params...)
}

// CheckSignature is a free data retrieval call binding the contract method 0xbe42c7c4.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, uint256 spokeID) view returns(uint8)
func (_MassMigration *MassMigrationCaller) CheckSignature(opts *bind.CallOpts, common TypesAuthCommon, proof TypesSignatureProof, spokeID *big.Int) (uint8, error) {
	var out []interface{}
	err := _MassMigration.contract.Call(opts, &out, "checkSignature", common, proof, spokeID)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CheckSignature is a free data retrieval call binding the contract method 0xbe42c7c4.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, uint256 spokeID) view returns(uint8)
func (_MassMigration *MassMigrationSession) CheckSignature(common TypesAuthCommon, proof TypesSignatureProof, spokeID *big.Int) (uint8, error) {
	return _MassMigration.Contract.CheckSignature(&_MassMigration.CallOpts, common, proof, spokeID)
}

// CheckSignature is a free data retrieval call binding the contract method 0xbe42c7c4.
//
// Solidity: function checkSignature((uint256[2],bytes32,bytes32,bytes32,bytes) common, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][]) proof, uint256 spokeID) view returns(uint8)
func (_MassMigration *MassMigrationCallerSession) CheckSignature(common TypesAuthCommon, proof TypesSignatureProof, spokeID *big.Int) (uint8, error) {
	return _MassMigration.Contract.CheckSignature(&_MassMigration.CallOpts, common, proof, spokeID)
}

// ProcessMassMigrationCommit is a free data retrieval call binding the contract method 0xab5a164f.
//
// Solidity: function processMassMigrationCommit(bytes32 stateRoot, uint256 maxTxSize, (bytes32,uint256[2],uint256,bytes32,uint256,uint256,uint256,bytes) committed, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_MassMigration *MassMigrationCaller) ProcessMassMigrationCommit(opts *bind.CallOpts, stateRoot [32]byte, maxTxSize *big.Int, committed TypesMassMigrationBody, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	var out []interface{}
	err := _MassMigration.contract.Call(opts, &out, "processMassMigrationCommit", stateRoot, maxTxSize, committed, proofs)

	if err != nil {
		return *new([32]byte), *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)
	out1 := *abi.ConvertType(out[1], new(uint8)).(*uint8)

	return out0, out1, err

}

// ProcessMassMigrationCommit is a free data retrieval call binding the contract method 0xab5a164f.
//
// Solidity: function processMassMigrationCommit(bytes32 stateRoot, uint256 maxTxSize, (bytes32,uint256[2],uint256,bytes32,uint256,uint256,uint256,bytes) committed, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_MassMigration *MassMigrationSession) ProcessMassMigrationCommit(stateRoot [32]byte, maxTxSize *big.Int, committed TypesMassMigrationBody, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	return _MassMigration.Contract.ProcessMassMigrationCommit(&_MassMigration.CallOpts, stateRoot, maxTxSize, committed, proofs)
}

// ProcessMassMigrationCommit is a free data retrieval call binding the contract method 0xab5a164f.
//
// Solidity: function processMassMigrationCommit(bytes32 stateRoot, uint256 maxTxSize, (bytes32,uint256[2],uint256,bytes32,uint256,uint256,uint256,bytes) committed, ((uint256,uint256,uint256,uint256),bytes32[])[] proofs) pure returns(bytes32, uint8 result)
func (_MassMigration *MassMigrationCallerSession) ProcessMassMigrationCommit(stateRoot [32]byte, maxTxSize *big.Int, committed TypesMassMigrationBody, proofs []TypesStateMerkleProof) ([32]byte, uint8, error) {
	return _MassMigration.Contract.ProcessMassMigrationCommit(&_MassMigration.CallOpts, stateRoot, maxTxSize, committed, proofs)
}
