// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package frontendcreate2transfer

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OffchainCreate2Transfer is an auto generated low-level Go binding around an user-defined struct.
type OffchainCreate2Transfer struct {
	TxType     *big.Int
	FromIndex  *big.Int
	ToIndex    *big.Int
	ToPubkeyID *big.Int
	Amount     *big.Int
	Fee        *big.Int
	Nonce      *big.Int
}

// OffchainCreate2TransferWithPub is an auto generated low-level Go binding around an user-defined struct.
type OffchainCreate2TransferWithPub struct {
	TxType    *big.Int
	FromIndex *big.Int
	ToPubkey  [4]*big.Int
	Amount    *big.Int
	Fee       *big.Int
	Nonce     *big.Int
}

// TxCreate2Transfer is an auto generated low-level Go binding around an user-defined struct.
type TxCreate2Transfer struct {
	FromIndex  *big.Int
	ToIndex    *big.Int
	ToPubkeyID *big.Int
	Amount     *big.Int
	Fee        *big.Int
}

// TypesSignatureProofWithReceiver is an auto generated low-level Go binding around an user-defined struct.
type TypesSignatureProofWithReceiver struct {
	States                  []TypesUserState
	StateWitnesses          [][][32]byte
	PubkeysSender           [][4]*big.Int
	PubkeyWitnessesSender   [][][32]byte
	PubkeysReceiver         [][4]*big.Int
	PubkeyWitnessesReceiver [][][32]byte
}

// TypesStateMerkleProof is an auto generated low-level Go binding around an user-defined struct.
type TypesStateMerkleProof struct {
	State   TypesUserState
	Witness [][32]byte
}

// TypesUserState is an auto generated low-level Go binding around an user-defined struct.
type TypesUserState struct {
	PubkeyID *big.Int
	TokenID  *big.Int
	Balance  *big.Int
	Nonce    *big.Int
}

// FrontendCreate2TransferABI is the input ABI used to generate the binding from.
const FrontendCreate2TransferABI = "[{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState[]\",\"name\":\"states\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"stateWitnesses\",\"type\":\"bytes32[][]\"},{\"internalType\":\"uint256[4][]\",\"name\":\"pubkeysSender\",\"type\":\"uint256[4][]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"pubkeyWitnessesSender\",\"type\":\"bytes32[][]\"},{\"internalType\":\"uint256[4][]\",\"name\":\"pubkeysReceiver\",\"type\":\"uint256[4][]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"pubkeyWitnessesReceiver\",\"type\":\"bytes32[][]\"}],\"internalType\":\"structTypes.SignatureProofWithReceiver\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"accountRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"name\":\"checkSignature\",\"outputs\":[{\"internalType\":\"enumTypes.Result\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedTxs\",\"type\":\"bytes[]\"}],\"name\":\"compress\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"decode\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toPubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structOffchain.Create2Transfer\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"decodeWithPub\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"toPubkey\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structOffchain.Create2TransferWithPub\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"txs\",\"type\":\"bytes\"}],\"name\":\"decompress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toPubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"structTx.Create2Transfer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toPubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structOffchain.Create2Transfer\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"name\":\"encode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"toPubkey\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structOffchain.Create2TransferWithPub\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"name\":\"encodeWithPub\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"witness\",\"type\":\"bytes32[]\"}],\"internalType\":\"structTypes.StateMerkleProof\",\"name\":\"from\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"pubkeyID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"internalType\":\"structTypes.UserState\",\"name\":\"state\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"witness\",\"type\":\"bytes32[]\"}],\"internalType\":\"structTypes.StateMerkleProof\",\"name\":\"to\",\"type\":\"tuple\"}],\"name\":\"process\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"newRoot\",\"type\":\"bytes32\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTxWithPub\",\"type\":\"bytes\"}],\"name\":\"signBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"},{\"internalType\":\"uint256[2]\",\"name\":\"signature\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"pubkeySender\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[4]\",\"name\":\"pubkeyReceiver\",\"type\":\"uint256[4]\"},{\"internalType\":\"bytes32\",\"name\":\"domain\",\"type\":\"bytes32\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"senderEncoded\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"encodedTx\",\"type\":\"bytes\"}],\"name\":\"validateAndApply\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newSender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"newReceiver\",\"type\":\"bytes\"},{\"internalType\":\"enumTypes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// FrontendCreate2TransferBin is the compiled bytecode used for deploying new contracts.
var FrontendCreate2TransferBin = ""

// DeployFrontendCreate2Transfer deploys a new Ethereum contract, binding an instance of FrontendCreate2Transfer to it.
func DeployFrontendCreate2Transfer(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *FrontendCreate2Transfer, error) {
	parsed, err := abi.JSON(strings.NewReader(FrontendCreate2TransferABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(FrontendCreate2TransferBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &FrontendCreate2Transfer{FrontendCreate2TransferCaller: FrontendCreate2TransferCaller{contract: contract}, FrontendCreate2TransferTransactor: FrontendCreate2TransferTransactor{contract: contract}, FrontendCreate2TransferFilterer: FrontendCreate2TransferFilterer{contract: contract}}, nil
}

// FrontendCreate2Transfer is an auto generated Go binding around an Ethereum contract.
type FrontendCreate2Transfer struct {
	FrontendCreate2TransferCaller     // Read-only binding to the contract
	FrontendCreate2TransferTransactor // Write-only binding to the contract
	FrontendCreate2TransferFilterer   // Log filterer for contract events
}

// FrontendCreate2TransferCaller is an auto generated read-only Go binding around an Ethereum contract.
type FrontendCreate2TransferCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendCreate2TransferTransactor is an auto generated write-only Go binding around an Ethereum contract.
type FrontendCreate2TransferTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendCreate2TransferFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type FrontendCreate2TransferFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// FrontendCreate2TransferSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type FrontendCreate2TransferSession struct {
	Contract     *FrontendCreate2Transfer // Generic contract binding to set the session for
	CallOpts     bind.CallOpts            // Call options to use throughout this session
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// FrontendCreate2TransferCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type FrontendCreate2TransferCallerSession struct {
	Contract *FrontendCreate2TransferCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                  // Call options to use throughout this session
}

// FrontendCreate2TransferTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type FrontendCreate2TransferTransactorSession struct {
	Contract     *FrontendCreate2TransferTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                  // Transaction auth options to use throughout this session
}

// FrontendCreate2TransferRaw is an auto generated low-level Go binding around an Ethereum contract.
type FrontendCreate2TransferRaw struct {
	Contract *FrontendCreate2Transfer // Generic contract binding to access the raw methods on
}

// FrontendCreate2TransferCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type FrontendCreate2TransferCallerRaw struct {
	Contract *FrontendCreate2TransferCaller // Generic read-only contract binding to access the raw methods on
}

// FrontendCreate2TransferTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type FrontendCreate2TransferTransactorRaw struct {
	Contract *FrontendCreate2TransferTransactor // Generic write-only contract binding to access the raw methods on
}

// NewFrontendCreate2Transfer creates a new instance of FrontendCreate2Transfer, bound to a specific deployed contract.
func NewFrontendCreate2Transfer(address common.Address, backend bind.ContractBackend) (*FrontendCreate2Transfer, error) {
	contract, err := bindFrontendCreate2Transfer(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &FrontendCreate2Transfer{FrontendCreate2TransferCaller: FrontendCreate2TransferCaller{contract: contract}, FrontendCreate2TransferTransactor: FrontendCreate2TransferTransactor{contract: contract}, FrontendCreate2TransferFilterer: FrontendCreate2TransferFilterer{contract: contract}}, nil
}

// NewFrontendCreate2TransferCaller creates a new read-only instance of FrontendCreate2Transfer, bound to a specific deployed contract.
func NewFrontendCreate2TransferCaller(address common.Address, caller bind.ContractCaller) (*FrontendCreate2TransferCaller, error) {
	contract, err := bindFrontendCreate2Transfer(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &FrontendCreate2TransferCaller{contract: contract}, nil
}

// NewFrontendCreate2TransferTransactor creates a new write-only instance of FrontendCreate2Transfer, bound to a specific deployed contract.
func NewFrontendCreate2TransferTransactor(address common.Address, transactor bind.ContractTransactor) (*FrontendCreate2TransferTransactor, error) {
	contract, err := bindFrontendCreate2Transfer(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &FrontendCreate2TransferTransactor{contract: contract}, nil
}

// NewFrontendCreate2TransferFilterer creates a new log filterer instance of FrontendCreate2Transfer, bound to a specific deployed contract.
func NewFrontendCreate2TransferFilterer(address common.Address, filterer bind.ContractFilterer) (*FrontendCreate2TransferFilterer, error) {
	contract, err := bindFrontendCreate2Transfer(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &FrontendCreate2TransferFilterer{contract: contract}, nil
}

// bindFrontendCreate2Transfer binds a generic wrapper to an already deployed contract.
func bindFrontendCreate2Transfer(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(FrontendCreate2TransferABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FrontendCreate2Transfer *FrontendCreate2TransferRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FrontendCreate2Transfer.Contract.FrontendCreate2TransferCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FrontendCreate2Transfer *FrontendCreate2TransferRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FrontendCreate2Transfer.Contract.FrontendCreate2TransferTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FrontendCreate2Transfer *FrontendCreate2TransferRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FrontendCreate2Transfer.Contract.FrontendCreate2TransferTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _FrontendCreate2Transfer.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_FrontendCreate2Transfer *FrontendCreate2TransferTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _FrontendCreate2Transfer.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_FrontendCreate2Transfer *FrontendCreate2TransferTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _FrontendCreate2Transfer.Contract.contract.Transact(opts, method, params...)
}

// CheckSignature is a free data retrieval call binding the contract method 0xb9c7dfcc.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, bytes txs) view returns(uint8)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) CheckSignature(opts *bind.CallOpts, signature [2]*big.Int, proof TypesSignatureProofWithReceiver, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, txs []byte) (uint8, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "checkSignature", signature, proof, stateRoot, accountRoot, domain, txs)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// CheckSignature is a free data retrieval call binding the contract method 0xb9c7dfcc.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, bytes txs) view returns(uint8)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) CheckSignature(signature [2]*big.Int, proof TypesSignatureProofWithReceiver, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, txs []byte) (uint8, error) {
	return _FrontendCreate2Transfer.Contract.CheckSignature(&_FrontendCreate2Transfer.CallOpts, signature, proof, stateRoot, accountRoot, domain, txs)
}

// CheckSignature is a free data retrieval call binding the contract method 0xb9c7dfcc.
//
// Solidity: function checkSignature(uint256[2] signature, ((uint256,uint256,uint256,uint256)[],bytes32[][],uint256[4][],bytes32[][],uint256[4][],bytes32[][]) proof, bytes32 stateRoot, bytes32 accountRoot, bytes32 domain, bytes txs) view returns(uint8)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) CheckSignature(signature [2]*big.Int, proof TypesSignatureProofWithReceiver, stateRoot [32]byte, accountRoot [32]byte, domain [32]byte, txs []byte) (uint8, error) {
	return _FrontendCreate2Transfer.Contract.CheckSignature(&_FrontendCreate2Transfer.CallOpts, signature, proof, stateRoot, accountRoot, domain, txs)
}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) Compress(opts *bind.CallOpts, encodedTxs [][]byte) ([]byte, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "compress", encodedTxs)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) Compress(encodedTxs [][]byte) ([]byte, error) {
	return _FrontendCreate2Transfer.Contract.Compress(&_FrontendCreate2Transfer.CallOpts, encodedTxs)
}

// Compress is a free data retrieval call binding the contract method 0xfa320471.
//
// Solidity: function compress(bytes[] encodedTxs) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) Compress(encodedTxs [][]byte) ([]byte, error) {
	return _FrontendCreate2Transfer.Contract.Compress(&_FrontendCreate2Transfer.CallOpts, encodedTxs)
}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) Decode(opts *bind.CallOpts, encodedTx []byte) (OffchainCreate2Transfer, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "decode", encodedTx)

	if err != nil {
		return *new(OffchainCreate2Transfer), err
	}

	out0 := *abi.ConvertType(out[0], new(OffchainCreate2Transfer)).(*OffchainCreate2Transfer)

	return out0, err

}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) Decode(encodedTx []byte) (OffchainCreate2Transfer, error) {
	return _FrontendCreate2Transfer.Contract.Decode(&_FrontendCreate2Transfer.CallOpts, encodedTx)
}

// Decode is a free data retrieval call binding the contract method 0xe5c5e9a3.
//
// Solidity: function decode(bytes encodedTx) pure returns((uint256,uint256,uint256,uint256,uint256,uint256,uint256) _tx)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) Decode(encodedTx []byte) (OffchainCreate2Transfer, error) {
	return _FrontendCreate2Transfer.Contract.Decode(&_FrontendCreate2Transfer.CallOpts, encodedTx)
}

// DecodeWithPub is a free data retrieval call binding the contract method 0xe48411d3.
//
// Solidity: function decodeWithPub(bytes encodedTx) pure returns((uint256,uint256,uint256[4],uint256,uint256,uint256) _tx)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) DecodeWithPub(opts *bind.CallOpts, encodedTx []byte) (OffchainCreate2TransferWithPub, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "decodeWithPub", encodedTx)

	if err != nil {
		return *new(OffchainCreate2TransferWithPub), err
	}

	out0 := *abi.ConvertType(out[0], new(OffchainCreate2TransferWithPub)).(*OffchainCreate2TransferWithPub)

	return out0, err

}

// DecodeWithPub is a free data retrieval call binding the contract method 0xe48411d3.
//
// Solidity: function decodeWithPub(bytes encodedTx) pure returns((uint256,uint256,uint256[4],uint256,uint256,uint256) _tx)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) DecodeWithPub(encodedTx []byte) (OffchainCreate2TransferWithPub, error) {
	return _FrontendCreate2Transfer.Contract.DecodeWithPub(&_FrontendCreate2Transfer.CallOpts, encodedTx)
}

// DecodeWithPub is a free data retrieval call binding the contract method 0xe48411d3.
//
// Solidity: function decodeWithPub(bytes encodedTx) pure returns((uint256,uint256,uint256[4],uint256,uint256,uint256) _tx)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) DecodeWithPub(encodedTx []byte) (OffchainCreate2TransferWithPub, error) {
	return _FrontendCreate2Transfer.Contract.DecodeWithPub(&_FrontendCreate2Transfer.CallOpts, encodedTx)
}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256,uint256,uint256)[])
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) Decompress(opts *bind.CallOpts, txs []byte) ([]TxCreate2Transfer, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "decompress", txs)

	if err != nil {
		return *new([]TxCreate2Transfer), err
	}

	out0 := *abi.ConvertType(out[0], new([]TxCreate2Transfer)).(*[]TxCreate2Transfer)

	return out0, err

}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256,uint256,uint256)[])
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) Decompress(txs []byte) ([]TxCreate2Transfer, error) {
	return _FrontendCreate2Transfer.Contract.Decompress(&_FrontendCreate2Transfer.CallOpts, txs)
}

// Decompress is a free data retrieval call binding the contract method 0x5cd3f3a1.
//
// Solidity: function decompress(bytes txs) pure returns((uint256,uint256,uint256,uint256,uint256)[])
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) Decompress(txs []byte) ([]TxCreate2Transfer, error) {
	return _FrontendCreate2Transfer.Contract.Decompress(&_FrontendCreate2Transfer.CallOpts, txs)
}

// Encode is a free data retrieval call binding the contract method 0x6cc2d754.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) Encode(opts *bind.CallOpts, _tx OffchainCreate2Transfer) ([]byte, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "encode", _tx)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Encode is a free data retrieval call binding the contract method 0x6cc2d754.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) Encode(_tx OffchainCreate2Transfer) ([]byte, error) {
	return _FrontendCreate2Transfer.Contract.Encode(&_FrontendCreate2Transfer.CallOpts, _tx)
}

// Encode is a free data retrieval call binding the contract method 0x6cc2d754.
//
// Solidity: function encode((uint256,uint256,uint256,uint256,uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) Encode(_tx OffchainCreate2Transfer) ([]byte, error) {
	return _FrontendCreate2Transfer.Contract.Encode(&_FrontendCreate2Transfer.CallOpts, _tx)
}

// EncodeWithPub is a free data retrieval call binding the contract method 0xbba9dddc.
//
// Solidity: function encodeWithPub((uint256,uint256,uint256[4],uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) EncodeWithPub(opts *bind.CallOpts, _tx OffchainCreate2TransferWithPub) ([]byte, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "encodeWithPub", _tx)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// EncodeWithPub is a free data retrieval call binding the contract method 0xbba9dddc.
//
// Solidity: function encodeWithPub((uint256,uint256,uint256[4],uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) EncodeWithPub(_tx OffchainCreate2TransferWithPub) ([]byte, error) {
	return _FrontendCreate2Transfer.Contract.EncodeWithPub(&_FrontendCreate2Transfer.CallOpts, _tx)
}

// EncodeWithPub is a free data retrieval call binding the contract method 0xbba9dddc.
//
// Solidity: function encodeWithPub((uint256,uint256,uint256[4],uint256,uint256,uint256) _tx) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) EncodeWithPub(_tx OffchainCreate2TransferWithPub) ([]byte, error) {
	return _FrontendCreate2Transfer.Contract.EncodeWithPub(&_FrontendCreate2Transfer.CallOpts, _tx)
}

// Process is a free data retrieval call binding the contract method 0x89840761.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from, ((uint256,uint256,uint256,uint256),bytes32[]) to) pure returns(bytes32 newRoot, uint8 result)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) Process(opts *bind.CallOpts, stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof, to TypesStateMerkleProof) (struct {
	NewRoot [32]byte
	Result  uint8
}, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "process", stateRoot, encodedTx, tokenID, from, to)

	outstruct := new(struct {
		NewRoot [32]byte
		Result  uint8
	})

	outstruct.NewRoot = out[0].([32]byte)
	outstruct.Result = out[1].(uint8)

	return *outstruct, err

}

// Process is a free data retrieval call binding the contract method 0x89840761.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from, ((uint256,uint256,uint256,uint256),bytes32[]) to) pure returns(bytes32 newRoot, uint8 result)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) Process(stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof, to TypesStateMerkleProof) (struct {
	NewRoot [32]byte
	Result  uint8
}, error) {
	return _FrontendCreate2Transfer.Contract.Process(&_FrontendCreate2Transfer.CallOpts, stateRoot, encodedTx, tokenID, from, to)
}

// Process is a free data retrieval call binding the contract method 0x89840761.
//
// Solidity: function process(bytes32 stateRoot, bytes encodedTx, uint256 tokenID, ((uint256,uint256,uint256,uint256),bytes32[]) from, ((uint256,uint256,uint256,uint256),bytes32[]) to) pure returns(bytes32 newRoot, uint8 result)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) Process(stateRoot [32]byte, encodedTx []byte, tokenID *big.Int, from TypesStateMerkleProof, to TypesStateMerkleProof) (struct {
	NewRoot [32]byte
	Result  uint8
}, error) {
	return _FrontendCreate2Transfer.Contract.Process(&_FrontendCreate2Transfer.CallOpts, stateRoot, encodedTx, tokenID, from, to)
}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTxWithPub) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) SignBytes(opts *bind.CallOpts, encodedTxWithPub []byte) ([]byte, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "signBytes", encodedTxWithPub)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTxWithPub) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) SignBytes(encodedTxWithPub []byte) ([]byte, error) {
	return _FrontendCreate2Transfer.Contract.SignBytes(&_FrontendCreate2Transfer.CallOpts, encodedTxWithPub)
}

// SignBytes is a free data retrieval call binding the contract method 0xd8b1728e.
//
// Solidity: function signBytes(bytes encodedTxWithPub) pure returns(bytes)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) SignBytes(encodedTxWithPub []byte) ([]byte, error) {
	return _FrontendCreate2Transfer.Contract.SignBytes(&_FrontendCreate2Transfer.CallOpts, encodedTxWithPub)
}

// Validate is a free data retrieval call binding the contract method 0x074aa417.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkeySender, uint256[4] pubkeyReceiver, bytes32 domain) view returns(bool)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) Validate(opts *bind.CallOpts, encodedTx []byte, signature [2]*big.Int, pubkeySender [4]*big.Int, pubkeyReceiver [4]*big.Int, domain [32]byte) (bool, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "validate", encodedTx, signature, pubkeySender, pubkeyReceiver, domain)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Validate is a free data retrieval call binding the contract method 0x074aa417.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkeySender, uint256[4] pubkeyReceiver, bytes32 domain) view returns(bool)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) Validate(encodedTx []byte, signature [2]*big.Int, pubkeySender [4]*big.Int, pubkeyReceiver [4]*big.Int, domain [32]byte) (bool, error) {
	return _FrontendCreate2Transfer.Contract.Validate(&_FrontendCreate2Transfer.CallOpts, encodedTx, signature, pubkeySender, pubkeyReceiver, domain)
}

// Validate is a free data retrieval call binding the contract method 0x074aa417.
//
// Solidity: function validate(bytes encodedTx, uint256[2] signature, uint256[4] pubkeySender, uint256[4] pubkeyReceiver, bytes32 domain) view returns(bool)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) Validate(encodedTx []byte, signature [2]*big.Int, pubkeySender [4]*big.Int, pubkeyReceiver [4]*big.Int, domain [32]byte) (bool, error) {
	return _FrontendCreate2Transfer.Contract.Validate(&_FrontendCreate2Transfer.CallOpts, encodedTx, signature, pubkeySender, pubkeyReceiver, domain)
}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCaller) ValidateAndApply(opts *bind.CallOpts, senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	var out []interface{}
	err := _FrontendCreate2Transfer.contract.Call(opts, &out, "validateAndApply", senderEncoded, encodedTx)

	outstruct := new(struct {
		NewSender   []byte
		NewReceiver []byte
		Result      uint8
	})

	outstruct.NewSender = out[0].([]byte)
	outstruct.NewReceiver = out[1].([]byte)
	outstruct.Result = out[2].(uint8)

	return *outstruct, err

}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendCreate2Transfer *FrontendCreate2TransferSession) ValidateAndApply(senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	return _FrontendCreate2Transfer.Contract.ValidateAndApply(&_FrontendCreate2Transfer.CallOpts, senderEncoded, encodedTx)
}

// ValidateAndApply is a free data retrieval call binding the contract method 0x5f7dde22.
//
// Solidity: function validateAndApply(bytes senderEncoded, bytes encodedTx) pure returns(bytes newSender, bytes newReceiver, uint8 result)
func (_FrontendCreate2Transfer *FrontendCreate2TransferCallerSession) ValidateAndApply(senderEncoded []byte, encodedTx []byte) (struct {
	NewSender   []byte
	NewReceiver []byte
	Result      uint8
}, error) {
	return _FrontendCreate2Transfer.Contract.ValidateAndApply(&_FrontendCreate2Transfer.CallOpts, senderEncoded, encodedTx)
}
